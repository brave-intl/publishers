doctype html
html
  head data-piwik-host=Rails.application.secrets[:piwik_host]
    = csrf_meta_tags
    meta charset="utf-8"
    meta http-equiv="X-UA-Compatible" content="IE=edge"
    meta name="viewport" content=("width=device-width, initial-scale=#{if local_assigns[:viewport_initial_scale] then viewport_initial_scale else '0.6' end}")
    title= t("shared.app_title")
    - if content_for?(:head_style_tags)
      = yield(:head_style_tags)
    - elsif params.has_key?(:bootstrap4)
      = stylesheet_link_tag('application', media: 'all')
    - else
      = stylesheet_link_tag('application-bootstrap-3', media: 'all')

    - if content_for?(:head_js_tags)
      = yield(:head_js_tags)
    - else
      = javascript_pack_tag('application')

    link rel="icon" type="image/png" href=image_path("favicon.ico")

  body data-action=params[:action] data-controller=params[:controller]
    javascript:
      // The script tag here runs after the body element has been created
      // on the DOM but before layout/paint. This allows us to set the class
      // before layout/paint and avoid a flash of content before the
      // detection has run.
      if (window.u2f) {
        document.body.classList.add('js-feature-available-u2f');
      }

    #main
      - unless @hide_nav
        = render("nav")

      /
      / ## Using flash messages in Brave Publishers ##
      /
      / Three styled variants for flash messages in this app exist:
      /
      /   * `:alert` a message with neutral blue styling.
      /   * `:notice` a message with positive green styling.
      /   * `:warning` a message with negative red styling.
      /
      / By default these messages appear in a bar below the navigation.
      /
      / ## Flash messages in panels ##
      /
      / The messages *may* appear at the top of a panel in a styled page. To
      / opt into that styling you must be using non-legacy styles and the
      / following render partial:
      /
      /     .single-panel--wrapper
      /       = render "panel_flash_messages" / <-- this partial
      /       .single-panel--content
      /
      / Pages using that partial will only have messages appear on the top
      / of the panel. The flash messages below the navigation bar wil be
      / squashed.
      /
      / ## Flash messages with html content ##
      /
      / Sometime a translation string, or other content you want to include
      / in a flash message, will contain HTML. In these cases you can use
      / the symbol postfix `_html_safe`. For example:
      /
      /     flash[:alert_html_safe] = "<strong>Foo</strong>";
      /
      / THIS CONTENT WILL NOT BE ESCAPED. Thus it should contain NO
      / user-entered content.
      /
      / The postfix is available for all three flash names and for rendering
      / below the navigation bar or in a panel.
      /
      - if content_for?(:application_flash)
        / This branch permits the panel_flash_messages parital to disable
        / navigation bar flash messages.
        = yield(:application_flash)
      - else
        .notifications.navbar-static-top#flash
          - [:alert, :notice, :warning].each do |name|
            - {alert: 'warning', notice: 'success', warning: 'warning'}[name].tap do |flash_class|
              - if flash[name]
                div class="alert alert-#{flash_class} flash"
                  = flash[name]
              - "#{name}_html_safe".tap do |html_safe_name|
                - if flash[html_safe_name]
                  div class="alert alert-#{flash_class} flash"
                    == flash[html_safe_name]
          - if content_for(:content_form_errors)
            .alert.alert-warning= I18n.t("activerecord.shared.errors")
            = yield(:content_form_errors)

      = content_for?(:content) ? yield(:content) : yield

      = render("footer")

    / This block of HTML is used by modal_shared.js to trigger modal
    / boxes. See that JavaScript file for more details.
    .js-shared-modal
      .md-container.container
        .col.col-10.col-md-8.col-sm-10.col-xs-12.col-center.sub-panel.sub-panel--panel--modal
          .md-content
          = link_to "#", class: "md-close js-deny"
            = render "application/icon_x"
      .md-overlay
