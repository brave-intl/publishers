/ .channel
/   .channel-link
/     = link_to(on_channel_type(channel), channel.details.url)



.m-3 class=(channel.verified? ? '' : 'not-verified')
  / This is information for this
  div
    .d-flex.align-items-center.justify-content-between
      / Title
      div
        small TITLE
        .d-flex
          h4.m-0.font-weight-bold
            img src=(channel_type_icon_url(channel)) width=16 height=16 class="mr-3"
            = link_to(channel.publication_title, channel.details.url, target: '_blank')

          - if channel.details.is_a?(SiteChannelDetails)
            .d-flex.align-items-center
              .text-muted.mx-3= "|"
              - case channel.details.verification_method
              - when "dns_record"
                = fa_icon "server", class: 'text-muted'
              - when "public_file"
                = fa_icon "file-o", class: 'text-muted'
              - when "wordpress"
                = fa_icon "wordpress", class: 'text-muted'
              span.text-muted.ml-2 data-tooltip="Verification method"
                = channel.details.verification_method

      - if channel.verified?
        .d-flex
          - if channel.promo_registration.present?
            div.mr-5.text-center
              small.text-mute REFERRAL CODE
              h3.m-0.text-center.font-weight-bold= channel.promo_registration.referral_code

          div.text-center
            small.text-mute CONTRIBUTIONS
            .d-flex
              h3.font-weight-bold= publisher_channel_bat_balance(@publisher, channel.details.channel_identifier)
              small.mt-2.ml-1 BAT


    / When the channel is being contested
    - if channel.verification_pending?
      small= link_to "Channel is being contested", admin_channel_transfer_path(@publisher)
    - elsif !channel.verified?
      / Unverified channel, let the admins know
      .mt-2
        = fa_icon "exclamation-circle", class: 'mr-2'
        span Unverified


    - if channel.verification_awaiting_admin_approval?
      .admin-approval
        span.admin-approval-warning = "Admin approval required"
        span.admin-approval-button
          = form_for channel, as: :channel, method: :patch, url: approve_channel_admin_publishers_path(channel_id: channel.id) do |f|
            = f.submit("Approve", class: "btn btn-primary")
    - elsif channel.verification_approved_by_admin?
      .admin-approval
        span.admin-approval-success = "Admin approved"


    .d-flex.mt-3
      - if channel.promo_registration.present?
        div
          .font-weight-bold Referral Statistics
          - totals = channel_referral_totals(channel)
          - if totals.present?
            .d-flex
              div.mr-3
                small DOWNLOADED
                .font-weight-bold.text-center= totals[PromoRegistration::RETRIEVALS]
              div.mx-3
                small INSTALLED
                .font-weight-bold.text-center= totals[PromoRegistration::FIRST_RUNS]
              div.mx-3
                small CONFIRMED
                .font-weight-bold.text-center= totals[PromoRegistration::FINALIZED]
        .border-right.mx-3

      div
        - potential_contribution_payment = channel.most_recent_potential_payment
        - if potential_contribution_payment.present?
          .font-weight-bold=payout_report_status_header('channel')
          div
            small AMOUNT
            div
              span.font-weight-bold= "#{(potential_contribution_payment.amount.to_d * 1/1E18).round(2)}"
              small.mt-1.ml-1 BAT

      div
      - if channel.details.stats.is_a?(Hash)
        - if potential_contribution_payment.present?
          .border-right.mx-3
        div
          .font-weight-bold Channel Statistics
          .d-flex
            - channel.details.stats.keys.each do |key|
              - if channel.details.stats[key].present?
                div.mx-3.text-center
                  small= "#{key.upcase.gsub("_", " ")}"
                  .font-weight-bold
                    = number_with_delimiter(channel.details.stats[key])

