noscript
  div.noscript-warning = t ".noscript"

- content_for(:navbar_content_right) do
  = link_to( \
    t("shared.dashboard"), \
    home_publishers_path, \
    class: 'title' \
  )

  - if @publisher.merchant?
    .mr-5= link_to(t('.merchant'), keys_path)

  = render partial: "choose_channel_button"
  = link_to("#{t "shared.instant_donation"}", "#", data: { "js-confirm-with-modal": "instant-donation-modal" }, class: 'btn btn-secondary btn-highlight', id: 'instant-donation-button')


= hidden_field_tag 'publisher_id', @publisher.id

#welcomeModal data-props="#{ { isOpen: new_publisher?(@publisher) }.to_json }"
= append_javascript_pack_tag "WelcomeModal"

.dashboard
    #uphold_status
      .row
        .col.mb-4.payouts class="#{@publisher.no_grants? ? 'col-md-7' : '' }"
          = render_async home_balances_publishers_path, container_class: 'balance-panel align-items-center' do
            .spinner-border.center.text-primary role="status"
        - if @publisher.may_create_referrals?
          .col-md.mb-4
            .dashboard-panel--wrapper
              .dashboard-panel--header#publishers_statements
                = t ".statements.heading"
              .dashboard-panel--content
                .statements-available
                  = link_to(t(".statements.view_statements"), statements_path)

    - if @payout_report.present?
      .row
       .col-md.mb-4
         = render partial: 'payout_status', locals: { payout_report: @payout_report, publisher: @publisher }
    .row
      .col-md.mb-4
        - if !(@publisher.excluded_from_payout? || @publisher.wire_only?)
          = render partial: 'wallet_services'

      - if @publisher.channels.empty?
        .col-md.mb-4
          .add-channel-cta
            = t ".add_channel_cta"

    / Don't show if none of the promo registrations has a valid stat
    - if !@publisher.only_user_funds? \
        && @publisher.promo_registrations.present? \
        && @publisher.promo_registrations.has_stats.select { |promo_registration| promo_registration.stats_by_date.present? }.present? \
        && !@publisher.promo_lockout_time_passed?
      = render "publishers/referral_charts", current_publisher: @publisher

    - @channels.each do |channel|
      = render partial: 'channel', locals: { channel: channel }
    = will_paginate(@channels)

    .row id="add_channel_placeholder"
      .col.mb-4
        = link_to(\
          "+ #{t "shared.add_channel"}", \
          choose_new_channel_type_publishers_path, \
          data: {"js-confirm-with-modal": "choose-channel-type"}, \
          class: 'channel-placeholder' \
        )

    .row.tos-row
      .col.mb-4
        - if @publisher.may_create_referrals?
          .promo--tos
            = t("promo.shared.tos_2_html")
        - else
          .terms-of-service
            = link_to(t("shared.terms_of_service"), terms_of_service_url)

- if @publisher.promo_status(promo_running?) == :active
  javascript:
    (function() {
      function closeReferralLinkAnimation() {
        var channelPromoInfoContainer = this.parentNode;
        if (channelPromoInfoContainer.classList.contains('channel--promo-info-container-slideout')) {
          channelPromoInfoContainer.classList.remove('channel--promo-info-container-slideout');
        }
      }
      function openReferralLinkAnimation() {
        var channelPromoInfoContainer = this.parentNode;
        if (!channelPromoInfoContainer.classList.contains('channel--promo-info-container-slideout')) {
          channelPromoInfoContainer.classList.add('channel--promo-info-container-slideout');
        }
      }
      function copyButtonAnimation() {
        channelPromoInfoContainer = this.parentNode;
        var mobileReferralLinkButtons = document.getElementsByClassName('referral-link-button-mobile');
        var desktopReferralLinkButtons = document.getElementsByClassName('referral-link-button-desktop');
        for (var i = 0; i < mobileReferralLinkButtons.length; i++) {
          mobileReferralLinkButtons[i].children[0].innerText = 'Referral Link';
          desktopReferralLinkButtons[i].children[0].innerText = 'Referral Link';
        }
        var mobileReferralLinkButton = channelPromoInfoContainer.children[4].children[0];
        var desktopReferralLinkButton = channelPromoInfoContainer.children[3].children[0];
        mobileReferralLinkButton.innerText = 'Copied!';
        desktopReferralLinkButton.innerText = 'Copied!';
        // Fade out 'copied!'
        setTimeout(function(){
          mobileReferralLinkButton.classList.add('fadedOut');
          desktopReferralLinkButton.classList.add('fadedOut');
          setTimeout(function(){
            mobileReferralLinkButton.innerText = 'Referral Link';
            desktopReferralLinkButton.innerText = 'Referral Link';
            mobileReferralLinkButton.classList.remove('fadedOut');
            desktopReferralLinkButton.classList.remove('fadedOut');
          }, 500);
        }, 1000);
      }
      var channelPromoInfoContainers = document.getElementsByClassName('channel--promo-info-container');
      var desktopReferralLinkButtons = document.getElementsByClassName('referral-link-button-desktop');
      var desktopCopyButtons = document.getElementsByClassName('referral-link-copy-button')
      var mobileReferralLinkButtons = document.getElementsByClassName('referral-link-button-mobile');
      for (var i = 0; i < channelPromoInfoContainers.length; i++) {
        desktopReferralLinkButtons[i].addEventListener('click', openReferralLinkAnimation, false);
        desktopCopyButtons[i].addEventListener('click', closeReferralLinkAnimation, false);
        desktopCopyButtons[i].addEventListener('click', copyButtonAnimation, false);
        mobileReferralLinkButtons[i].addEventListener('click', copyButtonAnimation, false);
      }
    })();

script id="instant-donation-modal" type="text/html"
  = render "instant_donation_modal", uphold_connection: @publisher.uphold_connection
