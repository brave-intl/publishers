noscript
  div.noscript-warning = t "publishers.home.noscript"

- content_for(:navbar_content_right) do
  = link_to( \
    t("shared.dashboard"), \
    home_publishers_path, \
    class: 'title' \
  )
  = render partial: "choose_channel_button"

/ .single-panel--wrapper.single-panel--wrapper--xlarge#statements_panel
/   = render "panel_flash_messages"
/   .single-panel--content
/     .single-panel--padded-content.text-left
/       h3= t ".title"
/       p= t ".description"
/       .statements-table
/         .header
/           .period = t ".period"
/           .download= t ".download"
/         - if @statement_has_content
/           .content#generated_statements
/             .statement
/               .period = t(".this_month")
/               .download = link_to(t(".download"), statement_path(current_publisher, statement_period: "this_month", :"data-piwik-action" => "DownloadThisMonthStatement", :"data-piwik-name" => "Clicked", :"data-piwik-value" => "StatementFlow"), format: :pdf)
/             .statement
/               .period = t(".last_month")
/               .download = link_to(t(".download"), statement_path(current_publisher, statement_period: "last_month", :"data-piwik-action" => "DownloadLastMonthStatement", :"data-piwik-name" => "Clicked", :"data-piwik-value" => "StatementFlow"), format: :pdf)
/             .statement
/               .period = t(".all")
/               .download = link_to(t(".download"), statement_path(current_publisher, statement_period: "all", :"data-piwik-action" => "DownloadAllStatement", :"data-piwik-name" => "Clicked", :"data-piwik-value" => "StatementFlow"), format: :pdf)
/         - else
/           .content.empty
.container.p-4.bg-white.shadow.rounded
  - unless @uphold_connection.can_read_transactions?
    .alert.alert-warning.d-flex.mb-4.align-items-center
      .p-2= render 'icon_circled_bang_warning'
      .p-2
        = t('publishers.statements.index.missing_scope')
        = link_to(I18n.t('publishers.statements.index.reauthorize'), connect_uphold_publishers_path, method: :patch)

  .statements
=javascript_pack_tag('Statements')
