[{"/Users/albertwang/Developer/publishers/public/creators-landing/src/index.js":"1","/Users/albertwang/Developer/publishers/public/creators-landing/src/locale/ja.js":"2","/Users/albertwang/Developer/publishers/public/creators-landing/src/locale/en.js":"3","/Users/albertwang/Developer/publishers/public/creators-landing/src/locale/jabap.js":"4","/Users/albertwang/Developer/publishers/public/creators-landing/src/views/index.js":"5","/Users/albertwang/Developer/publishers/public/creators-landing/src/views/LogIn.js":"6","/Users/albertwang/Developer/publishers/public/creators-landing/src/views/Home.js":"7","/Users/albertwang/Developer/publishers/public/creators-landing/src/views/SignUp.js":"8","/Users/albertwang/Developer/publishers/public/creators-landing/src/sections/index.js":"9","/Users/albertwang/Developer/publishers/public/creators-landing/src/theme/index.js":"10","/Users/albertwang/Developer/publishers/public/creators-landing/src/sections/main-section/index.js":"11","/Users/albertwang/Developer/publishers/public/creators-landing/src/components/index.js":"12","/Users/albertwang/Developer/publishers/public/creators-landing/src/sections/navigation/index.js":"13","/Users/albertwang/Developer/publishers/public/creators-landing/src/sections/footer/index.js":"14","/Users/albertwang/Developer/publishers/public/creators-landing/src/sections/main-section/signComponent/index.js":"15","/Users/albertwang/Developer/publishers/public/creators-landing/src/sections/summary/index.js":"16","/Users/albertwang/Developer/publishers/public/creators-landing/src/sections/signoff/index.js":"17","/Users/albertwang/Developer/publishers/public/creators-landing/src/sections/spotlight/index.js":"18","/Users/albertwang/Developer/publishers/public/creators-landing/src/components/icons/YouTube.js":"19","/Users/albertwang/Developer/publishers/public/creators-landing/src/components/icons/Close.js":"20","/Users/albertwang/Developer/publishers/public/creators-landing/src/components/icons/Sign.js":"21","/Users/albertwang/Developer/publishers/public/creators-landing/src/components/styled/animations/confetti.js":"22","/Users/albertwang/Developer/publishers/public/creators-landing/src/components/styled/animations/bat-lockup.js":"23","/Users/albertwang/Developer/publishers/public/creators-landing/src/components/styled/typography/index.js":"24","/Users/albertwang/Developer/publishers/public/creators-landing/src/components/styled/buttons/index.js":"25","/Users/albertwang/Developer/publishers/public/creators-landing/src/components/styled/container/index.js":"26","/Users/albertwang/Developer/publishers/public/creators-landing/src/components/styled/toast/index.js":"27","/Users/albertwang/Developer/publishers/public/creators-landing/src/sections/navigation/mobileNav/index.js":"28","/Users/albertwang/Developer/publishers/public/creators-landing/src/components/icons/Loading.js":"29","/Users/albertwang/Developer/publishers/public/creators-landing/src/components/icons/SwipeRight.js":"30","/Users/albertwang/Developer/publishers/public/creators-landing/src/components/icons/Chat.js":"31","/Users/albertwang/Developer/publishers/public/creators-landing/src/components/icons/Help.js":"32","/Users/albertwang/Developer/publishers/public/creators-landing/src/components/icons/Mail.js":"33","/Users/albertwang/Developer/publishers/public/creators-landing/src/components/icons/CaratRight.js":"34","/Users/albertwang/Developer/publishers/public/creators-landing/src/components/icons/User.js":"35","/Users/albertwang/Developer/publishers/public/creators-landing/src/components/icons/Info.js":"36","/Users/albertwang/Developer/publishers/public/creators-landing/src/components/icons/Menu.js":"37","/Users/albertwang/Developer/publishers/public/creators-landing/src/components/icons/Twitch.js":"38","/Users/albertwang/Developer/publishers/public/creators-landing/src/components/icons/Publication.js":"39","/Users/albertwang/Developer/publishers/public/creators-landing/src/sections/main-section/sentEmail/index.js":"40"},{"size":1473,"mtime":1619915740377,"results":"41","hashOfConfig":"42"},{"size":7790,"mtime":1619137654481,"results":"43","hashOfConfig":"42"},{"size":6570,"mtime":1589383696363,"results":"44","hashOfConfig":"42"},{"size":8066,"mtime":1619915740377,"results":"45","hashOfConfig":"42"},{"size":99,"mtime":1576642863963,"results":"46","hashOfConfig":"42"},{"size":393,"mtime":1579716460168,"results":"47","hashOfConfig":"42"},{"size":369,"mtime":1576642863963,"results":"48","hashOfConfig":"42"},{"size":404,"mtime":1579716460169,"results":"49","hashOfConfig":"42"},{"size":223,"mtime":1576642863958,"results":"50","hashOfConfig":"42"},{"size":1431,"mtime":1579716460168,"results":"51","hashOfConfig":"42"},{"size":6752,"mtime":1619915740379,"results":"52","hashOfConfig":"42"},{"size":1420,"mtime":1579716460165,"results":"53","hashOfConfig":"42"},{"size":2985,"mtime":1619915740380,"results":"54","hashOfConfig":"42"},{"size":1807,"mtime":1619915740378,"results":"55","hashOfConfig":"42"},{"size":6908,"mtime":1579716460167,"results":"56","hashOfConfig":"42"},{"size":4976,"mtime":1576642863962,"results":"57","hashOfConfig":"42"},{"size":2043,"mtime":1589383696364,"results":"58","hashOfConfig":"42"},{"size":3325,"mtime":1589383696365,"results":"59","hashOfConfig":"42"},{"size":404,"mtime":1576642863953,"results":"60","hashOfConfig":"42"},{"size":344,"mtime":1576642863951,"results":"61","hashOfConfig":"42"},{"size":3746,"mtime":1576642863952,"results":"62","hashOfConfig":"42"},{"size":270,"mtime":1576642863956,"results":"63","hashOfConfig":"42"},{"size":3938,"mtime":1576642863956,"results":"64","hashOfConfig":"42"},{"size":407,"mtime":1576642863956,"results":"65","hashOfConfig":"42"},{"size":1419,"mtime":1579716460165,"results":"66","hashOfConfig":"42"},{"size":3283,"mtime":1579716460165,"results":"67","hashOfConfig":"42"},{"size":1099,"mtime":1576642863956,"results":"68","hashOfConfig":"42"},{"size":1320,"mtime":1576642863961,"results":"69","hashOfConfig":"42"},{"size":644,"mtime":1576642863952,"results":"70","hashOfConfig":"42"},{"size":848,"mtime":1576642863952,"results":"71","hashOfConfig":"42"},{"size":616,"mtime":1576642863951,"results":"72","hashOfConfig":"42"},{"size":600,"mtime":1576642863952,"results":"73","hashOfConfig":"42"},{"size":381,"mtime":1576642863952,"results":"74","hashOfConfig":"42"},{"size":238,"mtime":1576642863951,"results":"75","hashOfConfig":"42"},{"size":356,"mtime":1576642863953,"results":"76","hashOfConfig":"42"},{"size":509,"mtime":1576642863952,"results":"77","hashOfConfig":"42"},{"size":266,"mtime":1576642863952,"results":"78","hashOfConfig":"42"},{"size":413,"mtime":1576642863952,"results":"79","hashOfConfig":"42"},{"size":336,"mtime":1576642863952,"results":"80","hashOfConfig":"42"},{"size":3733,"mtime":1621377573179,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},"1snj21v",{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"85"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"85"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"85"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"85"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"85"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"85"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"85"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"/Users/albertwang/Developer/publishers/public/creators-landing/src/index.js",["172"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {IntlProvider } from 'react-intl';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Home, SignUp, LogIn } from \"./views\";\nimport \"./style/normalize-style.css\";\nimport \"./style/style.css\";\n\nimport en from './locale/en';\nimport ja from './locale/ja';\nimport jabap from './locale/jabap';\n\n// Initizalize all locales for react-intl.\nlet locale = window.location.search.split('locale=')[1];\nlet locale_package = en;\nif (locale != null && (locale === 'ja' || locale === 'jabap')) {\n  locale_package = ja;\n}\n\nconst App = () => (\n  <Router>\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/sign-up\" component={SignUp} />\n      <Route path=\"/log-in\" component={LogIn} />\n    </Switch>\n  </Router>\n);\n\nexport const flattenMessages = ((nestedMessages, prefix = '') => {\n  if (nestedMessages === null) {\n    return {}\n  }\n  return Object.keys(nestedMessages).reduce((messages, key) => {\n    const value       = nestedMessages[key]\n    const prefixedKey = prefix ? `${prefix}.${key}` : key\n\n    if (typeof value === 'string') {\n      Object.assign(messages, { [prefixedKey]: value })\n    } else {\n      Object.assign(messages, flattenMessages(value, prefixedKey))\n    }\n\n    return messages\n  }, {})\n})\n\nReactDOM.render(<IntlProvider locale={locale} messages={flattenMessages(locale_package)}><App /></IntlProvider>, document.getElementById(\"root\"));\n",["173","174"],"/Users/albertwang/Developer/publishers/public/creators-landing/src/locale/ja.js",["175"],"export default {\n  nav: {\n    logoHref: \"/\",\n    batPillHref: \"http://www.basicattentiontoken.org\",\n    signup: \"登録\",\n    signupHref: \"/sign-up\",\n    login: \"ログイン\",\n    loginHref: \"/log-in\",\n    logoAlt: \"Brave Rewards Creator Logo\",\n    batPillAlt: \"Built with BAT\"\n  },\n  main: {\n    home: {\n      headline: \"あなたのコンテンツを収益化しませんか？\",\n      subhead:\n        \"コンテンツ閲覧者がBraveブラウザを利用していると、Brave Rewardsを通じて支援を受けることが可能です。認証済みクリエイターに登録し、コンテンツからの収益化をはじめてみませんか？\",\n      examples: {\n        headline: \"以下のようなサービスを登録できます\",\n        website: \"あなたのWebサイト\",\n        publication: \"ブログ\",\n        youtube: \"YouTube\",\n        Twitch: \"Twitch\"\n      },\n      btn: {\n        signup: \"登録\",\n        signupHref: \"/sign-up\",\n        login: \"ログイン\",\n        loginHref: \"/log-in\"\n      }\n    },\n    signin: {\n      heading: \"Brave Rewardsにログインする\",\n      subhead:\n        \"あなたのメールアドレスに安全なログイン用のリンクが送信されます。\",\n      inputPlaceholder: \"メールアドレス\",\n      btn: \"ログイン\",\n      tinyOne: \"新規登録\",\n      tinyOneHref: \"/sign-up\",\n      tinyTwo: \"(旧) YouTube Loginをご利用の方\",\n      tinyTwoHref: \"/publishers/auth/youtube_login\"\n    },\n    signup: {\n      heading: \"クリエイター登録をする\",\n      subhead: \"あなたのコンテンツを収益化しませんか？\",\n      inputPlaceholder: \"メールアドレス\",\n      btn: \"新規登録\",\n      tinyOne: \"以前ご登録の方はこちら\",\n      tinyOneHref: \"/log-in\"\n    },\n    footerOne: \"利用規約\",\n    footerOneHref:\n      \"https://basicattentiontoken.org/publisher-terms-of-service/\",\n    footerTwo: \"ヘルプセンター\",\n    footerTwoHref: \"https://support.brave.com/hc/en-us\",\n    termsOfService: {\n      agree: \"Braveの利用規約に同意します\",\n      description: \"Braveは<a>あなたのメールアドレス</a>をアカウントに関するご連絡やサービスに変更等に使用いたします。設定ページからメール通知の変更が可能です\",\n      invalid: \"アカウントを作成するには、Braveの利用規約に同意する必要があります\"\n    },\n    validEmail: \"メールアドレスを入力したことを確認してください。\"\n  },\n  signoff: {\n    btn: \"新規登録\",\n    btnHref: \"/sign-up\",\n    headline: \"すでに{count}以上のコンテンツクリエイターや出版社がBrave Rewardsに参加し、収益を上げ始めています\"\n  },\n  sign: {\n    sentAgain:\n      \"新しいログインメールを送信しました。届かない場合やその他ログインに問題が発生した場合は publishers@basicattentiontoken.org までご連絡ください\",\n    sentAgainSupportEmail: \"publishers@basicattentiontoken.org\",\n    sentAgainMailto: \"mailto: publishers@basicattentiontoken.org\",\n    signupSuccess: \"登録が完了しました！\",\n    signupSuccessBody:\n      \"先ほどお送りしたメールに記載されているログイン URLをクリックすると登録が完了します。メールが見つからない場合はスパムフォルダなどをご確認いただくか、\",\n    signinSuccess: \"ログインメールが送信されました\",\n    signinSuccessBody:\n      \"先ほどお送りしたメールのログイン URLをクリックするとログインできます。メールが見つからない場合はスパムフォルダなどをご確認いただくか、\",\n    signTryAgain: \"こちらから再度メールを送信してみてください\",\n    iconHelpHref: \"https://support.brave.com/hc/en-us\",\n    iconMessageHref: \"mailto: publishers@basicattentiontoken.org\",\n    iconRedditHref: \"https://www.reddit.com/r/BATProject/\",\n    iconCommunityHref: \"https://batcommunity.org/index.html\",\n    iconHelpTitle: \"ヘルプセンター\",\n    iconMessageTitle: \"お問い合わせ\",\n    iconRedditTitle: \"BAT Subreddit\",\n    iconCommunityTitle: \"BAT Community\"\n  },\n  spotlight: {\n    heading: \"あなたのコンテンツをBrave Rewardsで収益化できます\",\n    subhead:\n      \"Brave Rewardsは、作品やコンテンツからより多くの収益を上げ、広告ブロック等で減ってしまった収益を取り戻すことをサポートします。広告収益だけに依存する代わりに、ユーザからコンテンツへの直接支払いを受けることができるようになります。\",\n    bakerAlt: \"Bart Baker Brave Rewards\",\n    bakerCredit: \"- Bart Baker\",\n    bakerHref: \"https://www.youtube.com/BartBaKer\",\n    bakerQuote:\n      \"“Braveはいわば無料で参加できるクラウドファウンディングのようなものです。支援者は自分の財布を傷めずにあなたの活動を支援することができるのです！\",\n    defrancoAlt: \"Philip DeFranco Brave Rewards\",\n    defrancoCredit: \"- Philip DeFranco\",\n    defrancoHref: \"https://www.youtube.com/channel/UClFSU9_bUb4Rc6OYfTt5SPw\",\n    defrancoQuote:\n      \"“Braveを通じて、クリエイターは収益を上げることができ、ユーザは支援することが可能なのです！”\",\n    scottyAlt: \"Scotty Allen Strange Parts\",\n    scottyCredit: \"- Scotty Allen\",\n    scottyHref: \"https://www.youtube.com/channel/UCO8DQrSp5yEP937qNqTooOw\",\n    scottyQuote: \"\\\"Braveを使うだけで、ファンはクリエイターを簡単に支援することができます\\\"\",\n  },\n  summary: {\n    heading: \"Brave Rewardsの仕組み\",\n    oneTitle: \"Braveブラウザを使っているとを獲得できます\",\n    oneDesc:\n      \"Brave RewardsはBATからを基盤に作られています。Braveのプライバシーを重視した広告を見るとを獲得することができます。\",\n    twoTitle: \"そういったユーザがあなたのようなクリエイターやその作品に対してをチップとして送ります\",\n    twoDesc:\n      \"定期購読者、フォロワー、読者は毎月決まった金額分のチップを自動的に送ることや、都度任意の金額を送ることができます\",\n    threeTitle: \"Brave Rewardsの認証済みコンテンツクリエイターになる\",\n    threeDesc:\n      \"認証済みコンテンツクリエイターになると、クリエイター向けダッシュボードにアクセスすることが可能になります。ダッシュボードでは受け取ったチップを確認できる他、紹介用のURLを取得することが可能です。Braveを紹介することによってより多くのを獲得することができます。\",\n    fourTitle: \"クリエイターダッシュボードでチップを回収する\",\n    fourDesc: \"登録・ログイン後のダッシュボードでは明細書と残高を確認することが可能です。\",\n    fourLink_href: \"https://basicattentiontoken.org/\",\n    fourLink: \"BATについて、より詳しく\",\n    cardBusiness: \"ビジネスに関するお問い合わせ\",\n    cardBusinessHref: \"https://brave.com/brave-ads-waitlist\",\n    cardHelp: \"ヘルプセンター\",\n    cardHelpHref: \"https://support.brave.com/hc/en-us\",\n    cardGen: \"一般的なお問い合わせ\",\n    cardGenHref: \"mailto:publishers@basicattentiontoken.org\"\n  },\n  footer: {\n    one: \"© Brave Software\",\n    oneHref: \"http://www.brave.com\",\n    two: \"プライバシーポリシー\",\n    twoHref: \"https://brave.com/publishers-creators-privacy\",\n    three: \"利用規約\",\n    threeHref: \"https://basicattentiontoken.org/publisher-terms-of-service/\",\n    fourHref: \"https://basicattentiontoken.org\"\n  }\n};\n","/Users/albertwang/Developer/publishers/public/creators-landing/src/locale/en.js",["176"],"export default {\n  nav: {\n    logoHref: \"/\",\n    batPillHref: \"http://www.basicattentiontoken.org\",\n    signup: \"sign up\",\n    signupHref: \"/sign-up\",\n    login: \"log in\",\n    loginHref: \"/log-in\",\n    logoAlt: \"Brave Rewards Creator Logo\",\n    batPillAlt: \"Built with BAT\"\n  },\n  main: {\n    home: {\n      headline: \"Earn more for content you publish to the web\",\n      subhead:\n        \"Your viewers who use the Brave Browser may have contributed money to you while surfing the web through Brave Rewards. Simply sign up as a verified content creator on Brave Rewards to start collecting your contributions.\",\n      examples: {\n        headline: \"Earn more through...\",\n        website: \"Your own website\",\n        publication: \"Your own publication\",\n        youtube: \"YouTube\",\n        Twitch: \"Twitch\"\n      },\n      btn: {\n        signup: \"Sign up\",\n        signupHref: \"/sign-up\",\n        login: \"Log in\",\n        loginHref: \"/log-in\"\n      }\n    },\n    signin: {\n      heading: \"Log in to your account\",\n      subhead:\n        \"You will receive an email momentarily with a secure login link.\",\n      inputPlaceholder: \"Enter your email\",\n      btn: \"Log in\",\n      tinyOne: \"Don't have an account? Sign up\",\n      tinyOneHref: \"/sign-up\",\n      tinyTwo: \"Legacy YouTube Login\",\n      tinyTwoHref: \"/publishers/auth/youtube_login\"\n    },\n    signup: {\n      heading: \"Become a Creator\",\n      subhead: \"Earn more for content you publish to the web.\",\n      inputPlaceholder: \"Enter your email\",\n      btn: \"Create account\",\n      tinyOne: \"Already have an account? Log in\",\n      tinyOneHref: \"/log-in\"\n    },\n    footerOne: \"Terms of Service\",\n    footerOneHref:\n      \"https://basicattentiontoken.org/publisher-terms-of-service/\",\n    footerTwo: \"Help Center\",\n    footerTwoHref: \"https://support.brave.com/hc/en-us\",\n    termsOfService: {\n      agree: \"I agree to Brave's terms & conditions\",\n      description: \"Brave will <a>use your email</a> to contact you about your account and to update you about the service. Your settings page includes options for changing email notification permissions.\",\n      invalid: \"You must agree to Brave's terms & conditions to create an account\"\n    },\n    validEmail: \"Please enter a valid email.\"\n  },\n  signoff: {\n    btn: \"Sign up now\",\n    btnHref: \"/sign-up\",\n    headline: \"Join over {count} content creators and publishers earning more from Brave Rewards\"\n  },\n  sign: {\n    sentAgain:\n      \"A new email is on the way. If you still experience problems, please contact publishers@basicattentiontoken.org\",\n    sentAgainSupportEmail: \"publishers@basicattentiontoken.org\",\n    sentAgainMailto: \"mailto: publishers@basicattentiontoken.org\",\n    signupSuccess: \"Welcome to the party!\",\n    signupSuccessBody:\n      \"Finish setting up your Creator's account by clicking on the secure login link in the email we just sent. Don't see the email? Be sure to check your spam folder or \",\n    signinSuccess: \"A login email is on the way\",\n    signinSuccessBody:\n      \"Click on the secure login link in the email to access your account. Don't see the email? Be sure to check your spam folder or \",\n    signTryAgain: \"click here to try again.\",\n    iconHelpHref: \"https://support.brave.com/hc/en-us\",\n    iconMessageHref: \"mailto: publishers@basicattentiontoken.org\",\n    iconRedditHref: \"https://www.reddit.com/r/BATProject/\",\n    iconCommunityHref: \"https://batcommunity.org/index.html\",\n    iconHelpTitle: \"Help Center\",\n    iconMessageTitle: \"Email Us\",\n    iconRedditTitle: \"BAT Subreddit\",\n    iconCommunityTitle: \"BAT Community\"\n  },\n  spotlight: {\n    heading: \"You create content and we get you paid.\",\n    subhead:\n      \"Brave Rewards helps you earn more for doing what you do best and get back some of that revenue lost for when your viewers use ad blocking. Get paid directly by your audience for your content, instead of relying on ad revenue.\",\n    bakerAlt: \"Bart Baker Brave Rewards\",\n    bakerCredit: \"- Bart Baker\",\n    bakerHref: \"https://www.youtube.com/BartBaKer\",\n    bakerQuote:\n      \"“Brave is basically free crowdfunding. It is like Patreon but without having to spend any of your hard earned money.”\",\n    defrancoAlt: \"Philip DeFranco Brave Rewards\",\n    defrancoCredit: \"- Philip DeFranco\",\n    defrancoHref: \"https://www.youtube.com/channel/UClFSU9_bUb4Rc6OYfTt5SPw\",\n    defrancoQuote:\n      \"“There are also so many other ways just coming out that you can make new money and people can support other creators.”\",\n    scottyAlt: \"Scotty Allen Strange Parts\",\n    scottyCredit: \"- Scotty Allen\",\n    scottyHref: \"https://www.youtube.com/channel/UCO8DQrSp5yEP937qNqTooOw\",\n    scottyQuote: \"\\\"Brave is a great frictionless way for fans to support the creators they watch.\\\"\",\n  },\n  summary: {\n    heading: \"How does Brave Rewards work?\",\n    oneTitle: \"Brave Browser users earn tokens by surfing the web\",\n    oneDesc:\n      \"Brave Rewards is built on the Basic Attention Token (BAT). People who use the Brave Browser can earn tokens by viewing privacy-respecting ads.\",\n    twoTitle: \"They tip tokens to you, their favorite content creator\",\n    twoDesc:\n      \"Your subscribers, followers, or readers can automatically tip a set amount to you each month, or give one-time tips in an amount of their choice.\",\n    threeTitle: \"You sign up as a verified content creator on Brave Rewards\",\n    threeDesc:\n      \"Signing up as a verified content creator gives you access to the Creators dashboard, where you can manage all your tips. It will also give you access to your referral link, which you can use to earn more tokens.\",\n    fourTitle: \"Collect your tips in the Creators dashboard\",\n    fourDesc:\n      \"Once you’ve signed up and logged into the dashboard, you can use our partner Uphold to automatically convert the tokens you earned into a currency of your choosing.\",\n    fourLink_href: \"https://basicattentiontoken.org/\",\n    fourLink: \"Learn more about tokens.\",\n    cardBusiness: \"Business inquiries\",\n    cardBusinessHref: \"https://brave.com/brave-ads-waitlist\",\n    cardHelp: \"Help Center\",\n    cardHelpHref: \"https://support.brave.com/hc/en-us\",\n    cardGen: \"General inquiries\",\n    cardGenHref: \"mailto:publishers@basicattentiontoken.org\"\n  },\n  footer: {\n    one: \"© Brave Software\",\n    oneHref: \"http://www.brave.com\",\n    two: \"Privacy Policy\",\n    twoHref: \"https://brave.com/publishers-creators-privacy\",\n    three: \"Terms of Use\",\n    threeHref: \"https://basicattentiontoken.org/publisher-terms-of-service/\",\n    fourHref: \"https://basicattentiontoken.org\"\n  }\n};\n","/Users/albertwang/Developer/publishers/public/creators-landing/src/locale/jabap.js",["177"],"export default {\n    nav: {\n      logoHref: \"/\",\n      batPillHref: \"http://www.basicattentiontoken.org\",\n      signup: \"登録\",\n      signupHref: \"/sign-up\",\n      login: \"ログイン\",\n      loginHref: \"/log-in\",\n      logoAlt: \"Brave Rewards Creator Logo\",\n      batPillAlt: \"Built with BAT\"\n    },\n    main: {\n      home: {\n        headline: \"あなたのコンテンツを収益化しませんか？\",\n        subhead:\n          \"コンテンツ閲覧者がBraveブラウザを利用していると、Brave Rewardsを通じて支援を受けることが可能です。認証済みクリエイターに登録し、コンテンツからの収益化をはじめてみませんか？\",\n        examples: {\n          headline: \"以下のようなサービスを登録できます\",\n          website: \"あなたのWebサイト\",\n          publication: \"ブログ\",\n          youtube: \"YouTube\",\n          Twitch: \"Twitch\"\n        },\n        btn: {\n          signup: \"登録\",\n          signupHref: \"/sign-up\",\n          login: \"ログイン\",\n          loginHref: \"/log-in\"\n        }\n      },\n      signin: {\n        heading: \"Brave Rewardsにログインする\",\n        subhead:\n          \"あなたのメールアドレスに安全なログイン用のリンクが送信されます。\",\n        inputPlaceholder: \"メールアドレス\",\n        btn: \"ログイン\",\n        tinyOne: \"新規登録\",\n        tinyOneHref: \"/sign-up\",\n        tinyTwo: \"(旧) YouTube Loginをご利用の方\",\n        tinyTwoHref: \"/publishers/auth/youtube_login\"\n      },\n      signup: {\n        heading: \"クリエイター登録をする\",\n        subhead: \"あなたのコンテンツを収益化しませんか？\",\n        inputPlaceholder: \"メールアドレス\",\n        btn: \"新規登録\",\n        tinyOne: \"以前ご登録の方はこちら\",\n        tinyOneHref: \"/log-in\"\n      },\n      footerOne: \"利用規約\",\n      footerOneHref:\n        \"https://basicattentiontoken.org/publisher-terms-of-service/\",\n      footerTwo: \"ヘルプセンター\",\n      footerTwoHref: \"https://support.brave.com/hc/en-us\",\n      termsOfService: {\n        agree: \"Braveの利用規約に同意します\",\n        description: \"Braveは<a>あなたのメールアドレス</a>をアカウントに関するご連絡やサービスに変更等に使用いたします。設定ページからメール通知の変更が可能です\",\n        invalid: \"アカウントを作成するには、Braveの利用規約に同意する必要があります\"\n      },\n      validEmail: \"メールアドレスを入力したことを確認してください。\"\n    },\n    signoff: {\n      btn: \"新規登録\",\n      btnHref: \"/sign-up\",\n      headline: \"すでに{count}以上のコンテンツクリエイターや出版社がBrave Rewardsに参加し、収益を上げ始めています\"\n    },\n    sign: {\n      sentAgain:\n        \"新しいログインメールを送信しました。届かない場合やその他ログインに問題が発生した場合は publishers@basicattentiontoken.org までご連絡ください\",\n      sentAgainSupportEmail: \"publishers@basicattentiontoken.org\",\n      sentAgainMailto: \"mailto: publishers@basicattentiontoken.org\",\n      signupSuccess: \"登録が完了しました！\",\n      signupSuccessBody:\n        \"先ほどお送りしたメールに記載されているログイン URLをクリックすると登録が完了します。メールが見つからない場合はスパムフォルダなどをご確認いただくか、\",\n      signinSuccess: \"ログインメールが送信されました\",\n      signinSuccessBody:\n        \"先ほどお送りしたメールのログイン URLをクリックするとログインできます。メールが見つからない場合はスパムフォルダなどをご確認いただくか、\",\n      signTryAgain: \"こちらから再度メールを送信してみてください\",\n      iconHelpHref: \"https://support.brave.com/hc/en-us\",\n      iconMessageHref: \"mailto: publishers@basicattentiontoken.org\",\n      iconRedditHref: \"https://www.reddit.com/r/BATProject/\",\n      iconCommunityHref: \"https://batcommunity.org/index.html\",\n      iconHelpTitle: \"ヘルプセンター\",\n      iconMessageTitle: \"お問い合わせ\",\n      iconRedditTitle: \"BAT Subreddit\",\n      iconCommunityTitle: \"BAT Community\"\n    },\n    spotlight: {\n      heading: \"あなたのコンテンツをBrave Rewardsで収益化できます\",\n      subhead:\n        \"Brave Rewardsは、作品やコンテンツからより多くの収益を上げ、広告ブロック等で減ってしまった収益を取り戻すことをサポートします。広告収益だけに依存する代わりに、ユーザからコンテンツへの直接支払いを受けることができるようになります。\",\n      bakerAlt: \"Bart Baker Brave Rewards\",\n      bakerCredit: \"- Bart Baker\",\n      bakerHref: \"https://www.youtube.com/BartBaKer\",\n      bakerQuote:\n        \"“Braveはいわば無料で参加できるクラウドファウンディングのようなものです。支援者は自分の財布を傷めずにあなたの活動を支援することができるのです！\",\n      defrancoAlt: \"Philip DeFranco Brave Rewards\",\n      defrancoCredit: \"- Philip DeFranco\",\n      defrancoHref: \"https://www.youtube.com/channel/UClFSU9_bUb4Rc6OYfTt5SPw\",\n      defrancoQuote:\n        \"“Braveを通じて、クリエイターは収益を上げることができ、ユーザは支援することが可能なのです！”\",\n      scottyAlt: \"Scotty Allen Strange Parts\",\n      scottyCredit: \"- Scotty Allen\",\n      scottyHref: \"https://www.youtube.com/channel/UCO8DQrSp5yEP937qNqTooOw\",\n      scottyQuote: \"\\\"Braveを使うだけで、ファンはクリエイターを簡単に支援することができます\\\"\",\n    },\n    summary: {\n      heading: \"Brave Rewardsの仕組み\",\n      oneTitle: \"Braveブラウザを使っているとを獲得できます\",\n      oneDesc:\n        \"Brave RewardsはBATからを基盤に作られています。Braveのプライバシーを重視した広告を見るとを獲得することができます。\",\n      twoTitle: \"そういったユーザがあなたのようなクリエイターやその作品に対してをチップとして送ります\",\n      twoDesc:\n        \"定期購読者、フォロワー、読者は毎月決まった金額分のチップを自動的に送ることや、都度任意の金額を送ることができます\",\n      threeTitle: \"Brave Rewardsの認証済みコンテンツクリエイターになる\",\n      threeDesc:\n        \"認証済みコンテンツクリエイターになると、クリエイター向けダッシュボードにアクセスすることが可能になります。ダッシュボードでは受け取ったチップを確認できる他、紹介用のURLを取得することが可能です。Braveを紹介することによってより多くのを獲得することができます。\",\n      fourTitle: \"クリエイターダッシュボードでチップを回収する\",\n      fourDesc: \"登録・ログイン後のダッシュボードでは明細書と残高を確認することが可能です。\",\n      fourLink_href: \"https://basicattentiontoken.org/\",\n      fourLink: \"BATについて、より詳しく\",\n      cardBusiness: \"ビジネスに関するお問い合わせ\",\n      cardBusinessHref: \"https://brave.com/brave-ads-waitlist\",\n      cardHelp: \"ヘルプセンター\",\n      cardHelpHref: \"https://support.brave.com/hc/en-us\",\n      cardGen: \"一般的なお問い合わせ\",\n      cardGenHref: \"mailto:publishers@basicattentiontoken.org\"\n    },\n    footer: {\n      one: \"© Brave Software\",\n      oneHref: \"http://www.brave.com\",\n      two: \"プライバシーポリシー\",\n      twoHref: \"https://brave.com/publishers-creators-privacy\",\n      three: \"利用規約\",\n      threeHref: \"https://basicattentiontoken.org/publisher-terms-of-service/\",\n      fourHref: \"https://basicattentiontoken.org\"\n    }\n  };\n  ","/Users/albertwang/Developer/publishers/public/creators-landing/src/views/index.js",[],"/Users/albertwang/Developer/publishers/public/creators-landing/src/views/LogIn.js",[],"/Users/albertwang/Developer/publishers/public/creators-landing/src/views/Home.js",[],"/Users/albertwang/Developer/publishers/public/creators-landing/src/views/SignUp.js",[],"/Users/albertwang/Developer/publishers/public/creators-landing/src/sections/index.js",[],"/Users/albertwang/Developer/publishers/public/creators-landing/src/theme/index.js",[],"/Users/albertwang/Developer/publishers/public/creators-landing/src/sections/main-section/index.js",["178"],"import React from \"react\";\nimport {\n  Container,\n  GradientBackground,\n  H2,\n  PrimaryButton,\n  UserIcon,\n  YouTubeIcon,\n  PublicationIcon,\n  TwitchIcon,\n  SwoopBottom,\n  StyledFormField\n} from \"../../components\";\n\nimport { Link } from \"react-router-dom\";\nimport SignComponent from \"./signComponent\";\nimport batPill from \"../../components/img/built-with-bat-pill.svg\";\nimport { Heading, Box, Image, Anchor, Text, CheckBox, FormField } from \"grommet\";\nimport locale from '../../locale/en';\nimport { FormattedMessage, useIntl} from 'react-intl';\n\n\nconst logAction = (action, value) => {\n  if (window._paq) {\n    window._paq.push([\"trackEvent\", action, \"Clicked\", value]);\n  }\n};\n\nexport const MainHome = () => {\n  return (\n    <GradientBackground align=\"center\">\n      <Container role=\"main\">\n        <Box\n          direction=\"column\"\n          pad=\"large\"\n          margin={{ top: \"80px\", bottom: \"90px\" }}\n        >\n          {(window.location.search.split('locale=')[1] !== 'ja' || window.location.search.split('locale=')[1] !== 'jabap') &&\n            <Box\n              className=\"bat-pill\"\n              as=\"a\"\n              href={locale.nav.batPillHref}\n              aria-label={locale.nav.batPillAlt}\n            >\n              <Image src={batPill} />\n            </Box>\n          }\n          <Heading level=\"1\" color=\"white\" margin={{ vertical: \"small\" }}>\n            {<FormattedMessage id=\"main.home.headline\"/>}\n          </Heading>\n          <H2 level=\"2\" size=\"small\" color=\"#E9E9F4\">\n            {<FormattedMessage id=\"main.home.subhead\"/>}\n          </H2>\n          <Box direction=\"row\" pad={{ vertical: \"24px\" }} width=\"100%\" className=\"main-btns\">\n            <Link\n              to={locale.main.home.btn.signupHref}\n              onClick={() => logAction(\"StartSignupClicked\", \"Landing\")}\n            >\n              <PrimaryButton\n                label={<FormattedMessage id=\"main.home.btn.signup\" />}\n                name={locale.main.home.btn.signup}\n                margin={{right: \"medium\"}}\n              />\n            </Link>\n            <Link\n              to={locale.main.home.btn.loginHref}\n              onClick={() => logAction(\"StartSignupClicked\", \"Landing\")}\n            >\n              <Anchor\n                label={<FormattedMessage id=\"main.home.btn.login\" />}\n                name={locale.main.home.btn.login}\n                color=\"white\"\n              />\n            </Link>\n          </Box>\n          <Heading level=\"3\" size=\"small\" color=\"#E9E9F4\">\n            {<FormattedMessage id=\"main.home.examples.headline\" />}\n          </Heading>\n          <Box direction=\"row-responsive\" gap=\"24px\">\n            <Box direction=\"column\">\n              <Box direction=\"row\" gap=\"small\" margin={{ vertical: \"8px\" }}>\n                <UserIcon />\n                <Heading level=\"3\" color=\"#E9E9F4\" size=\"small\" margin=\"0\">\n                  {<FormattedMessage id=\"main.home.examples.website\" />}\n                </Heading>\n              </Box>\n              <Box direction=\"row\" gap=\"small\" margin={{ vertical: \"8px\" }}>\n                <YouTubeIcon />\n                <Heading level=\"3\" color=\"#E9E9F4\" size=\"small\" margin=\"0\">\n                  {<FormattedMessage id=\"main.home.examples.youtube\" />}\n                </Heading>\n              </Box>\n            </Box>\n            <Box direction=\"column\">\n              <Box direction=\"row\" gap=\"small\" margin={{ vertical: \"8px\" }}>\n                <PublicationIcon />\n                <Heading level=\"3\" color=\"#E9E9F4\" size=\"small\" margin=\"0\">\n                  {<FormattedMessage id=\"main.home.examples.publication\" />}\n                </Heading>\n              </Box>\n              <Box direction=\"row\" gap=\"small\" margin={{ vertical: \"8px\" }}>\n                <TwitchIcon />\n                <Heading level=\"3\" color=\"#E9E9F4\" size=\"small\" margin=\"0\">\n                  {<FormattedMessage id=\"main.home.examples.Twitch\" />}\n                </Heading>\n              </Box>\n            </Box>\n          </Box>\n        </Box>\n      </Container>\n      <SwoopBottom />\n    </GradientBackground>\n  );\n};\n\nexport const MainSignIn = () => {\n  return (\n    <SignComponent\n      heading={<FormattedMessage id=\"main.signin.heading\"/>}\n      subhead={<FormattedMessage id=\"main.signin.subhead\"/>}\n      inputPlaceholder={<FormattedMessage id=\"main.signin.inputPlaceholder\"/>}\n      btn={<FormattedMessage id=\"main.signin.btn\"/>}\n      tinyOne={<FormattedMessage id=\"main.signin.tinyOne\"/>}\n      tinyOneHref={locale.main.signin.tinyOneHref}\n      tinyTwo={<FormattedMessage id=\"main.signin.tinyTwo\"/>}\n      tinyTwoHref={locale.main.signin.tinyTwoHref}\n      footerOne={<FormattedMessage id=\"main.footerOne\"/>}\n      footerOneHref={locale.main.footerOneHref}\n      footerTwo={<FormattedMessage id=\"main.footerTwo\"/>}\n      footerTwoHref={locale.main.footerTwoHref}\n      formId=\"signInForm\"\n      method=\"PUT\"\n    />\n  );\n};\n\nconst TermsOfService = props => {\n  const intl = useIntl();\n  const [checked, setChecked] = React.useState(false);\n\n  return (\n    <Text size=\"18px\" color=\"rgba(255, 255, 255, .8)\" textAlign=\"center\">\n      <FormattedMessage\n        id=\"main.termsOfService.description\"\n        values={{\n          a: msg => (\n            <Anchor\n              href=\"https://brave.com/publishers-creators-privacy/#brave-rewards\"\n              label={msg}\n              style={{ textDecoration: \"underline\" }}\n              color=\"rgba(255, 255, 255, .8)\"\n            />\n          )\n        }}\n      />\n\n      <StyledFormField\n        required\n        component={CheckBox}\n        name=\"terms_of_service\"\n        justify=\"center\"\n        pad={true}\n        checked={checked}\n        label={intl.formatMessage({ id: \"main.termsOfService.agree\" })}\n        validate={(fieldData, _) => {\n          if (!fieldData) {\n            return intl.formatMessage({ id: \"main.termsOfService.invalid\" })\n          }\n        }}\n        onChange={event => {\n          setChecked(event.target.checked);\n        }}\n      />\n    </Text>\n  );\n};\n\nexport const MainSignUp = () => {\n  return (\n    <SignComponent\n      heading={<FormattedMessage id=\"main.signup.heading\"/>}\n      subhead={<FormattedMessage id=\"main.signup.subhead\"/>}\n      inputPlaceholder={<FormattedMessage id=\"main.signup.inputPlaceholder\"/>}\n      btn={<FormattedMessage id=\"main.signup.btn\"/>}\n      tinyOne={<FormattedMessage id=\"main.signup.tinyOne\"/>}\n      tinyOneHref={locale.main.signup.tinyOneHref}\n      footerOne={<FormattedMessage id=\"main.footerOne\"/>}\n      footerOneHref={locale.main.footerOneHref}\n      footerTwo={<FormattedMessage id=\"main.footerTwo\"/>}\n      footerTwoHref={locale.main.footerTwoHref}\n      formId=\"signUpForm\"\n      termsOfService={<TermsOfService />}\n      method=\"POST\"\n    />\n  );\n};\n","/Users/albertwang/Developer/publishers/public/creators-landing/src/components/index.js",[],"/Users/albertwang/Developer/publishers/public/creators-landing/src/sections/navigation/index.js",["179"],"import React from \"react\";\nimport { Box, Image, ResponsiveContext, Anchor } from \"grommet\";\nimport { Link } from \"react-router-dom\";\nimport { SecondaryButton } from \"../../components\";\nimport logo from \"../../components/img/brave-rewards-creators-logo.svg\";\nimport batPill from \"../../components/img/built-with-bat-pill.svg\";\n\nimport locale from \"../../locale/en\";\nimport { NavWrapper, NavContainer } from \"../../components/styled/container\";\nimport MobileNav from \"./mobileNav\";\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nconst logAction = (action, value) => {\n  if (window._paq) {\n    window._paq.push([\"trackEvent\", action, \"Clicked\", value]);\n  }\n};\n\nconst DefaultNav = () => {\n  const intl = useIntl();\n\n  return (\n    <NavWrapper as=\"nav\" id=\"nav\">\n      <NavContainer\n        direction=\"row\"\n        justify=\"between\"\n        align=\"center\"\n        pad={{ vertical: \"medium\", horizontal: \"large\" }}\n        width=\"100%\"\n        role=\"navigation\"\n      >\n        <Box direction=\"row\" gap=\"medium\" align=\"center\">\n          <Link to={locale.nav.logoHref} name=\"Home\">\n            <Box as=\"span\">\n              <Image src={logo} height=\"32px\" alt={intl.formatMessage({ id: \"nav.logoAlt\" })} />\n            </Box>\n          </Link>\n          {(window.location.search.split('locale=')[1] !== 'ja' || window.location.search.split('locale=')[1] !== 'jabap') &&\n            <Box\n              as=\"a\"\n              href={locale.nav.batPillHref}\n              name={intl.formatMessage({ id: \"nav.batPillHref\" })}\n              aria-label={intl.formatMessage({ id: \"nav.batPillAlt\" })}\n            >\n              <Image src={batPill} height=\"24px\" alt={intl.formatMessage({ id: \"nav.batPillAlt\" })} />\n            </Box>\n          }\n        </Box>\n        <Box direction=\"row\" align=\"center\" gap=\"large\">\n          <Link\n            to={locale.nav.signupHref}\n            onClick={() => logAction(\"LandingSignUpClicked\", \"Landing\")}\n          >\n            <Anchor\n              as=\"span\"\n              a11yTitle=\"Sign up to be a Brave Rewards Creator\"\n              color=\"white\"\n              label={intl.formatMessage({ id: \"nav.signup\"})}\n              name={intl.formatMessage({ id: \"nav.signup\"})}\n            />\n          </Link>\n          <Link\n            to={locale.nav.loginHref}\n            onClick={() => logAction(\"LandingLoginClicked\", \"Landing\")}\n          >\n            <SecondaryButton\n              a11yTitle=\"Log in to your Brave Creator dashboard\"\n              label={intl.formatMessage({ id: \"nav.login\" })}\n              name={intl.formatMessage({ id: \"nav.login\" })}\n              primary\n            />\n          </Link>\n        </Box>\n      </NavContainer>\n    </NavWrapper>\n  );\n};\n\nexport const Nav = () => {\n  return (\n    <ResponsiveContext.Consumer>\n      {size => {\n        if (size >= \"medium\") {\n          return <MobileNav />;\n        } else {\n          return <DefaultNav />;\n        }\n      }}\n    </ResponsiveContext.Consumer>\n  );\n};\n","/Users/albertwang/Developer/publishers/public/creators-landing/src/sections/footer/index.js",[],"/Users/albertwang/Developer/publishers/public/creators-landing/src/sections/main-section/signComponent/index.js",["180","181","182"],"import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n  Container,\n  GradientBackground,\n  PrimaryButton,\n  SwoopBottom,\n  StyledInput,\n  Toast\n} from \"../../../components\";\n\nimport { Loading } from \"../../../components/icons/Loading\";\n\nimport batPill from \"../../../components/img/built-with-bat-pill.svg\";\nimport locale from \"../../../locale/en\";\nimport { FormattedMessage } from 'react-intl';\nimport { useIntl } from 'react-intl';\nimport { Heading, Text, Box, Anchor, Form, Image } from \"grommet\";\n\nimport SentEmail from \"../sentEmail\";\n\n// Sign up and sign in shared this component since\n// they are so similar in structure\nconst SignComponent = props => {\n  const intl = useIntl();\n  return (\n    <React.Fragment>\n      <Toast\n        notification={props.notification}\n        closeNotification={() => props.setNotification({ show: false })}\n      />\n      <Container\n        animation={props.animation}\n        role=\"main\"\n        align=\"center\"\n        pad=\"large\"\n        id=\"zindex\"\n        fill\n        margin={{ top: \"80px\" }}\n      >\n        <Box width=\"540px\" flex={{ shrink: 0 }} align=\"center\">\n          <Heading\n            level=\"2\"\n            color=\"white\"\n            a11yTitle=\"Headline\"\n            textAlign=\"center\"\n            margin=\"small\"\n          >\n            {props.heading}\n          </Heading>\n          <Text\n            size=\"18px\"\n            color=\"rgba(255, 255, 255, .8)\"\n            textAlign=\"center\"\n            margin={{ bottom: \"50px\" }}\n          >\n            {props.subhead}\n          </Text>\n          <Box width=\"100%\" margin={{ bottom: \"30px\" }}>\n            <Form\n              className=\"email-input\"\n              errors={props.errors}\n              id={props.formId}\n              onSubmit={props.submitForm}\n            >\n              <StyledInput\n                name=\"email\"\n                type=\"email\"\n                autoFocus\n                placeholder={intl.formatMessage({\n                  id: \"main.signin.inputPlaceholder\"\n                })}\n                validate={(fieldData, _) => {\n                  if (!fieldData) {\n                    return intl.formatMessage({ id: \"main.validEmail\" });\n                  }\n                }}\n              />\n\n              {props.termsOfService}\n\n              <PrimaryButton\n                label={props.btn}\n                icon={props.loading ? <Loading /> : <span />}\n                type=\"submit\"\n                alignSelf=\"center\"\n              />\n            </Form>\n\n            <Box align=\"center\" pad=\"xlarge\">\n              <Anchor\n                href={props.tinyOneHref}\n                label={props.tinyOne}\n                color=\"rgba(255, 255, 255, .8)\"\n                size=\"small\"\n              />\n              <Anchor\n                href={props.tinyTwoHref}\n                label={props.tinyTwo}\n                color=\"rgba(255, 255, 255, .8)\"\n                size=\"small\"\n              />\n            </Box>\n          </Box>\n        </Box>\n\n        <Box gap=\"large\">\n          <Box direction=\"row\" gap=\"small\" align=\"center\">\n            <Anchor\n              label={props.footerOne}\n              href={props.footerOneHref}\n              color=\"rgba(255, 255, 255, .8)\"\n              size=\"small\"\n            />\n            <Text>|</Text>\n            <Anchor\n              label={props.footerTwo}\n              href={props.footerTwoHref}\n              color=\"rgba(255, 255, 255, .8)\"\n              size=\"small\"\n            />\n          </Box>\n        </Box>\n      </Container>\n      <SwoopBottom swoop=\"fade\" />\n    </React.Fragment>\n  );\n};\n\nconst WrappedSignComponent = props => {\n  const [notification, setNotification] = useState({ show: false });\n  const [animation, setAnimation] = useState(\"fadeIn\");\n  const [emailed, setEmailed] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [confetti, setConfetti] = useState(false);\n  const [words, setWords] = useState({});\n  const intl = useIntl();\n\n  const successSignInWords = {\n    headline: intl.formatMessage({id: 'sign.signinSuccess'}),\n    body: intl.formatMessage({id: 'sign.signinSuccessBody'})\n  };\n\n  const successSignUpWords = {\n    headline: intl.formatMessage({id: 'sign.signupSuccess'}),\n    body: intl.formatMessage({id: 'sign.signupSuccessBody'})\n  };\n\n  const submitForm = event => {\n    // Prevent people from endlessly submitting\n    event.target.blur();\n    if (loading) {\n      return;\n    }\n\n    // Analytics\n    if (window._paq) {\n      let action = \"StartFlowClicked\";\n      let value = \"Landing\";\n\n      if (event.target.id === \"signInForm\") {\n        action = \"NewAuthLoginClicked\";\n        value = \"NewAuthFlow\";\n      }\n\n      window._paq.push([\"trackEvent\", action, \"Clicked\", value]);\n    }\n\n    setLoading(true);\n    setNotification({ show: false, text: \"\" });\n    sendToServer(event);\n  };\n\n  const tryAgain = event => {\n    event.preventDefault();\n    setNotification({ show: true, text: <FormattedMessage id=\"sign.sentAgain\"/>});\n  };\n\n  async function sendToServer(body) {\n    const url = \"publishers/registrations.json\";\n    body.target.id === \"signInForm\"\n      ? setWords(successSignInWords)\n      : setWords(successSignUpWords);\n\n    let crsf = document.head.querySelector(\"[name=csrf-token]\");\n    if (crsf) {\n      crsf = crsf.getAttribute(\"content\");\n    }\n\n    await fetch(url, {\n      headers: {\n        Accept: \"application/json\",\n        \"X-CSRF-Token\": crsf,\n        \"X-Requested-With\": \"XMLHttpRequest\",\n        \"Content-Type\": \"application/json\"\n      },\n      method: props.method,\n      body: JSON.stringify(body.value)\n    }).then(response => {\n      setLoading(false);\n\n      if (response.ok) {\n        submitSuccess();\n      } else {\n        response\n          .json()\n          .then(json => {\n            setNotification({ show: true, text: json.message });\n          })\n          .catch(errorText => {\n            setNotification({ show: true, text: \"Something went wrong.\" });\n          });\n      }\n    });\n  }\n\n  const submitSuccess = () => {\n    setAnimation({\n      type: \"fadeOut\",\n      delay: 0,\n      duration: 100,\n      size: \"xsmall\"\n    });\n    setTimeout(function() {\n      setEmailed(true);\n      setConfetti(true);\n    }, 250);\n  };\n\n  return (\n    <GradientBackground height=\"100vh\" align=\"center\">\n      {emailed ? (\n        <SentEmail\n          confetti={confetti}\n          notification={notification}\n          closeNotification={() => setNotification({ show: false })}\n          tryAgain={tryAgain}\n          words={words}\n        />\n      ) : (\n        <SignComponent\n          submitForm={submitForm}\n          animation={animation}\n          loading={loading}\n          notification={notification}\n          setNotification={setNotification}\n          {...props}\n        />\n      )}\n    </GradientBackground>\n  );\n};\n\nexport default withRouter(WrappedSignComponent);\n","/Users/albertwang/Developer/publishers/public/creators-landing/src/sections/summary/index.js",["183"],"import React from \"react\";\nimport {\n  Container,\n  GradientBackground,\n  SummaryNumber,\n  SummaryContainer,\n  DividerLine,\n  CardButtonContainer,\n  CardButtonText,\n  CaratRightIcon,\n  ChatIcon,\n  HelpIcon,\n  MailIcon,\n  CardButtonAnchor,\n  SwoopBottom,\n  SwoopTop,\n  IconContainer\n} from \"../../components\";\nimport { Heading, Box, Anchor, Paragraph, ResponsiveContext } from \"grommet\";\nimport locale from \"../../locale/en\";\nimport { FormattedMessage } from 'react-intl';\n\nconst TextBlock = props => {\n  return (\n    <ResponsiveContext.Consumer>\n      {size => {\n        if (size >= \"medium\") {\n          return (\n            <SummaryContainer\n              direction=\"row\"\n              alignSelf={props.side}\n              gap=\"12px\"\n              width=\"100%\"\n              pad=\"medium\">\n              <SummaryNumber level=\"1\" color=\"white\" margin=\"0\" size=\"large\">\n                {props.step}\n              </SummaryNumber>\n              <Box>\n                <Heading level=\"3\" color=\"white\" margin=\"0\">\n                  {props.title}\n                </Heading>\n                <Paragraph color=\"#E9E9F4\" width=\"100%\">\n                  {props.description}\n                  {props.descriptionLink}\n                </Paragraph>\n              </Box>\n            </SummaryContainer>\n          );\n        } else {\n          return (\n            <SummaryContainer\n              direction=\"row\"\n              width=\"50%\"\n              alignSelf={props.side}\n              gap=\"16px\"\n              pad=\"medium\">\n              <SummaryNumber level=\"1\" color=\"white\" margin=\"0\" size=\"large\">\n                {props.step}\n              </SummaryNumber>\n              <Box width=\"480px\">\n                <Heading level=\"3\" color=\"white\" margin=\"0\">\n                  {props.title}\n                </Heading>\n                <Paragraph size=\"small\" color=\"white\">\n                  {props.description}\n                  {props.descriptionLink}\n                </Paragraph>\n              </Box>\n            </SummaryContainer>\n          );\n        }\n      }}\n    </ResponsiveContext.Consumer>\n  );\n};\n\nconst CardButton = props => {\n  return (\n    <CardButtonAnchor href={props.href}>\n      <CardButtonContainer\n        direction=\"row\"\n        gap=\"16px\"\n        justify=\"center\"\n        align=\"center\">\n        <IconContainer size=\"28px\" fill=\"#FFF\">\n          {props.icon}\n        </IconContainer>\n        <CardButtonText textAlign=\"start\" color=\"white\">\n          {props.title}\n        </CardButtonText>\n        <IconContainer size=\"24px\" fill=\"#FFF\">\n          <CaratRightIcon />\n        </IconContainer>\n      </CardButtonContainer>\n    </CardButtonAnchor>\n  );\n};\n\nexport const Summary = () => {\n  return (\n    <GradientBackground align=\"center\">\n      <SwoopTop />\n      <Box className=\"summary-spacer\" />\n      <Container align=\"center\" pad={{ horizontal: \"large\" }} responsive>\n        <Heading\n          level=\"2\"\n          textAlign=\"center\"\n          color=\"white\"\n          margin={{ vertical: \"large\" }}>\n          {<FormattedMessage id=\"summary.heading\"/>}\n        </Heading>\n        <TextBlock\n          side=\"start\"\n          step=\"1\"\n          title={<FormattedMessage id=\"summary.oneTitle\"/>}\n          description={<FormattedMessage id=\"summary.oneDesc\"/>}\n        />\n        <TextBlock\n          side=\"end\"\n          step=\"2\"\n          title={<FormattedMessage id=\"summary.twoTitle\"/>}\n          description={<FormattedMessage id=\"summary.twoDesc\"/>}\n        />\n        <TextBlock\n          side=\"start\"\n          step=\"3\"\n          title={<FormattedMessage id=\"summary.threeTitle\"/>}\n          description={<FormattedMessage id=\"summary.threeDesc\"/>}\n        />\n        <TextBlock\n          side=\"end\"\n          step=\"4\"\n          title={<FormattedMessage id=\"summary.fourTitle\"/>}\n          description={<FormattedMessage id=\"summary.fourDesc\"/>}\n          description_link={\n            <Anchor\n              href={locale.summary.fourLinkHref}\n              label={<FormattedMessage id=\"summary.fourLink\"/>}\n              color=\"white\"\n            />\n          }\n        />\n        <DividerLine />\n        <Box\n          direction=\"row-responsive\"\n          gap=\"medium\"\n          margin={{ vertical: \"24px\" }}\n          width=\"100%\"\n          justify=\"center\">\n          <CardButton\n            href={locale.summary.cardBusinessHref}\n            icon={<ChatIcon />}\n            title={<FormattedMessage id=\"summary.cardBusiness\"/>}\n          />\n          <CardButton\n            href={locale.summary.cardHelpHref}\n            icon={<HelpIcon />}\n            title={<FormattedMessage id=\"summary.cardHelp\"/>}\n          />\n          <CardButton\n            href={locale.summary.cardGenHref}\n            icon={<HelpIcon />}\n            icon={<MailIcon />}\n            title={<FormattedMessage id=\"summary.cardGen\"/>}\n          />\n        </Box>\n      </Container>\n      <Box className=\"summary-spacer\" />\n      <SwoopBottom />\n    </GradientBackground>\n  );\n};\n","/Users/albertwang/Developer/publishers/public/creators-landing/src/sections/signoff/index.js",[],"/Users/albertwang/Developer/publishers/public/creators-landing/src/sections/spotlight/index.js",[],"/Users/albertwang/Developer/publishers/public/creators-landing/src/components/icons/YouTube.js",[],"/Users/albertwang/Developer/publishers/public/creators-landing/src/components/icons/Close.js",[],"/Users/albertwang/Developer/publishers/public/creators-landing/src/components/icons/Sign.js",[],"/Users/albertwang/Developer/publishers/public/creators-landing/src/components/styled/animations/confetti.js",[],"/Users/albertwang/Developer/publishers/public/creators-landing/src/components/styled/animations/bat-lockup.js",[],"/Users/albertwang/Developer/publishers/public/creators-landing/src/components/styled/typography/index.js",[],["184","185"],"/Users/albertwang/Developer/publishers/public/creators-landing/src/components/styled/buttons/index.js",[],"/Users/albertwang/Developer/publishers/public/creators-landing/src/components/styled/container/index.js",[],"/Users/albertwang/Developer/publishers/public/creators-landing/src/components/styled/toast/index.js",[],"/Users/albertwang/Developer/publishers/public/creators-landing/src/sections/navigation/mobileNav/index.js",[],"/Users/albertwang/Developer/publishers/public/creators-landing/src/components/icons/Loading.js",[],"/Users/albertwang/Developer/publishers/public/creators-landing/src/components/icons/SwipeRight.js",[],"/Users/albertwang/Developer/publishers/public/creators-landing/src/components/icons/Chat.js",[],"/Users/albertwang/Developer/publishers/public/creators-landing/src/components/icons/Help.js",[],"/Users/albertwang/Developer/publishers/public/creators-landing/src/components/icons/Mail.js",[],"/Users/albertwang/Developer/publishers/public/creators-landing/src/components/icons/CaratRight.js",[],"/Users/albertwang/Developer/publishers/public/creators-landing/src/components/icons/User.js",[],"/Users/albertwang/Developer/publishers/public/creators-landing/src/components/icons/Info.js",[],"/Users/albertwang/Developer/publishers/public/creators-landing/src/components/icons/Menu.js",[],"/Users/albertwang/Developer/publishers/public/creators-landing/src/components/icons/Twitch.js",[],"/Users/albertwang/Developer/publishers/public/creators-landing/src/components/icons/Publication.js",[],"/Users/albertwang/Developer/publishers/public/creators-landing/src/sections/main-section/sentEmail/index.js",[],{"ruleId":"186","severity":1,"message":"187","line":11,"column":8,"nodeType":"188","messageId":"189","endLine":11,"endColumn":13},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":1,"column":1,"nodeType":"196","endLine":138,"endColumn":3},{"ruleId":"194","severity":1,"message":"195","line":1,"column":1,"nodeType":"196","endLine":139,"endColumn":3},{"ruleId":"194","severity":1,"message":"195","line":1,"column":1,"nodeType":"196","endLine":138,"endColumn":5},{"ruleId":"186","severity":1,"message":"197","line":18,"column":55,"nodeType":"188","messageId":"189","endLine":18,"endColumn":64},{"ruleId":"186","severity":1,"message":"198","line":11,"column":10,"nodeType":"188","messageId":"189","endLine":11,"endColumn":26},{"ruleId":"186","severity":1,"message":"199","line":14,"column":8,"nodeType":"188","messageId":"189","endLine":14,"endColumn":15},{"ruleId":"186","severity":1,"message":"200","line":15,"column":8,"nodeType":"188","messageId":"189","endLine":15,"endColumn":14},{"ruleId":"186","severity":1,"message":"201","line":18,"column":44,"nodeType":"188","messageId":"189","endLine":18,"endColumn":49},{"ruleId":"202","severity":1,"message":"203","line":163,"column":13,"nodeType":"204","endLine":163,"endColumn":32},{"ruleId":"190","replacedBy":"205"},{"ruleId":"192","replacedBy":"206"},"no-unused-vars","'jabap' is defined but never used.","Identifier","unusedVar","no-native-reassign",["207"],"no-negated-in-lhs",["208"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'FormField' is defined but never used.","'FormattedMessage' is defined but never used.","'batPill' is defined but never used.","'locale' is defined but never used.","'Image' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["207"],["208"],"no-global-assign","no-unsafe-negation"]