# typed: strong
# This is an autogenerated file for Rails' jobs.
# Please rerun bundle exec rake rails_rbi:jobs to regenerate.
class ActiveRecord::DestroyAssociationAsyncJob
  sig do
    params(
      owner_model_name: T.untyped,
      owner_id: T.untyped,
      association_class: T.untyped,
      association_ids: T.untyped,
      association_primary_key_column: T.untyped,
      ensuring_owner_was_method: T.untyped
    ).returns(ActiveRecord::DestroyAssociationAsyncJob)
  end
  def self.perform_later(owner_model_name: nil, owner_id: nil, association_class: nil, association_ids: nil, association_primary_key_column: nil, ensuring_owner_was_method: nil); end

  sig do
    params(
      owner_model_name: T.untyped,
      owner_id: T.untyped,
      association_class: T.untyped,
      association_ids: T.untyped,
      association_primary_key_column: T.untyped,
      ensuring_owner_was_method: T.untyped
    ).returns(ActiveRecord::DestroyAssociationAsyncJob)
  end
  def self.perform_now(owner_model_name: nil, owner_id: nil, association_class: nil, association_ids: nil, association_primary_key_column: nil, ensuring_owner_was_method: nil); end

  sig do
    params(
      wait: T.nilable(ActiveSupport::Duration),
      wait_until: T.nilable(T.any(ActiveSupport::TimeWithZone, Date, Time)),
      queue: T.nilable(T.any(String, Symbol)),
      priority: T.nilable(Integer)
    ).returns(T.self_type)
  end
  def self.set(wait: nil, wait_until: nil, queue: nil, priority: nil); end
end
