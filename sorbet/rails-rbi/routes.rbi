# typed: strong
# This is an autogenerated file for Rails routes.
# Please run bundle exec rake rails_rbi:routes to regenerate.
class ActionController::Base
  include GeneratedUrlHelpers
end

class ActionController::API
  include GeneratedUrlHelpers
end

module ActionView::Helpers
  include GeneratedUrlHelpers
end

class ActionMailer::Base
  include GeneratedUrlHelpers
end

class ActionDispatch::IntegrationTest
  include GeneratedUrlHelpers
end

class ActionDispatch::SystemTestCase
  include GeneratedUrlHelpers
end

module GeneratedUrlHelpers
  # Sigs for route /health-check(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def health_check_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def health_check_url(*args, **kwargs); end

  # Sigs for route /publishers/uphold_verified(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publishers_uphold_verified_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publishers_uphold_verified_url(*args, **kwargs); end

  # Sigs for route /publishers/gemini_connection/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publishers_gemini_connection_new_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publishers_gemini_connection_new_url(*args, **kwargs); end

  # Sigs for route /publishers/bitflyer_connection/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publishers_bitflyer_connection_new_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publishers_bitflyer_connection_new_url(*args, **kwargs); end

  # Sigs for route /publishers/stripe_connection/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publishers_stripe_connection_new_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publishers_stripe_connection_new_url(*args, **kwargs); end

  # Sigs for route /publishers/paypal_connections/connect_callback(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publishers_paypal_connections_connect_callback_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publishers_paypal_connections_connect_callback_url(*args, **kwargs); end

  # Sigs for route /csp-violation-report(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def csp_violation_report_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def csp_violation_report_url(*args, **kwargs); end

  # Sigs for route /uphold_connections/login(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def uphold_connections_login_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def uphold_connections_login_url(*args, **kwargs); end

  # Sigs for route /uphold_connections/confirm(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def uphold_connections_confirm_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def uphold_connections_confirm_url(*args, **kwargs); end

  # Sigs for route /browser_users/home(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def browser_users_home_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def browser_users_home_url(*args, **kwargs); end

  # Sigs for route /browser_users/accept_tos(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def browser_users_accept_tos_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def browser_users_accept_tos_url(*args, **kwargs); end

  # Sigs for route /connection/currency(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def connection_currency_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def connection_currency_url(*args, **kwargs); end

  # Sigs for route /connection/stripe_connection/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_connection_stripe_connection_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_connection_stripe_connection_url(*args, **kwargs); end

  # Sigs for route /connection/stripe_connection/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_connection_stripe_connection_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_connection_stripe_connection_url(*args, **kwargs); end

  # Sigs for route /connection/stripe_connection(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def connection_stripe_connection_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def connection_stripe_connection_url(*args, **kwargs); end

  # Sigs for route /connection/gemini_connection/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_connection_gemini_connection_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_connection_gemini_connection_url(*args, **kwargs); end

  # Sigs for route /connection/gemini_connection/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_connection_gemini_connection_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_connection_gemini_connection_url(*args, **kwargs); end

  # Sigs for route /connection/gemini_connection(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def connection_gemini_connection_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def connection_gemini_connection_url(*args, **kwargs); end

  # Sigs for route /connection/bitflyer_connection/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_connection_bitflyer_connection_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_connection_bitflyer_connection_url(*args, **kwargs); end

  # Sigs for route /connection/bitflyer_connection/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_connection_bitflyer_connection_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_connection_bitflyer_connection_url(*args, **kwargs); end

  # Sigs for route /connection/bitflyer_connection(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def connection_bitflyer_connection_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def connection_bitflyer_connection_url(*args, **kwargs); end

  # Sigs for route /connection/uphold_connection/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_connection_uphold_connection_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_connection_uphold_connection_url(*args, **kwargs); end

  # Sigs for route /connection/uphold_connection(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def connection_uphold_connection_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def connection_uphold_connection_url(*args, **kwargs); end

  # Sigs for route /connection/paypal_connections/connect_callback(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def connect_callback_connection_paypal_connections_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def connect_callback_connection_paypal_connections_url(*args, **kwargs); end

  # Sigs for route /connection/paypal_connections/:paypal_connection_id/refresh(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def connection_paypal_connection_refresh_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def connection_paypal_connection_refresh_url(*args, **kwargs); end

  # Sigs for route /connection/paypal_connections/:paypal_connection_id/disconnect(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def connection_paypal_connection_disconnect_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def connection_paypal_connection_disconnect_url(*args, **kwargs); end

  # Sigs for route /publishers/sign_up(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def sign_up_publishers_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def sign_up_publishers_url(*args, **kwargs); end

  # Sigs for route /publishers/log_in(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def log_in_publishers_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def log_in_publishers_url(*args, **kwargs); end

  # Sigs for route /publishers/expired_authentication_token(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def expired_authentication_token_publishers_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def expired_authentication_token_publishers_url(*args, **kwargs); end

  # Sigs for route /publishers/resend_authentication_email(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def resend_authentication_email_publishers_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def resend_authentication_email_publishers_url(*args, **kwargs); end

  # Sigs for route /publishers/registrations(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def registrations_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def registrations_url(*args, **kwargs); end

  # Sigs for route /publishers/case/delete_file(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def delete_file_case_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def delete_file_case_url(*args, **kwargs); end

  # Sigs for route /publishers/case/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_case_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_case_url(*args, **kwargs); end

  # Sigs for route /publishers/case/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_case_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_case_url(*args, **kwargs); end

  # Sigs for route /publishers/case(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def case_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def case_url(*args, **kwargs); end

  # Sigs for route /publishers/case_notes(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def case_notes_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def case_notes_url(*args, **kwargs); end

  # Sigs for route /publishers/case_notes/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_case_note_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_case_note_url(*args, **kwargs); end

  # Sigs for route /publishers/case_notes/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_case_note_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_case_note_url(*args, **kwargs); end

  # Sigs for route /publishers/case_notes/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def case_note_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def case_note_url(*args, **kwargs); end

  # Sigs for route /publishers/keys/:key_id/roll(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def key_roll_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def key_roll_url(*args, **kwargs); end

  # Sigs for route /publishers/keys(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def keys_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def keys_url(*args, **kwargs); end

  # Sigs for route /publishers/keys/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_key_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_key_url(*args, **kwargs); end

  # Sigs for route /publishers/keys/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_key_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_key_url(*args, **kwargs); end

  # Sigs for route /publishers/keys/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def key_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def key_url(*args, **kwargs); end

  # Sigs for route /publishers/statements/rate_card(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rate_card_statements_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rate_card_statements_url(*args, **kwargs); end

  # Sigs for route /publishers/statements(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def statements_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def statements_url(*args, **kwargs); end

  # Sigs for route /publishers/statements/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def statement_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def statement_url(*args, **kwargs); end

  # Sigs for route /publishers/two_factor_authentications_removal/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_two_factor_authentications_removal_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_two_factor_authentications_removal_url(*args, **kwargs); end

  # Sigs for route /publishers/two_factor_authentications_removal/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_two_factor_authentications_removal_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_two_factor_authentications_removal_url(*args, **kwargs); end

  # Sigs for route /publishers/two_factor_authentications_removal(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def two_factor_authentications_removal_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def two_factor_authentications_removal_url(*args, **kwargs); end

  # Sigs for route /publishers/wallet/latest(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def latest_wallet_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def latest_wallet_url(*args, **kwargs); end

  # Sigs for route /publishers/wallet/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_wallet_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_wallet_url(*args, **kwargs); end

  # Sigs for route /publishers/wallet/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_wallet_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_wallet_url(*args, **kwargs); end

  # Sigs for route /publishers/wallet(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def wallet_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def wallet_url(*args, **kwargs); end

  # Sigs for route /publishers/promo_registrations/for_referral_code(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def for_referral_code_promo_registrations_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def for_referral_code_promo_registrations_url(*args, **kwargs); end

  # Sigs for route /publishers/promo_registrations/overview(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def overview_promo_registrations_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def overview_promo_registrations_url(*args, **kwargs); end

  # Sigs for route /publishers/promo_registrations(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def promo_registrations_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def promo_registrations_url(*args, **kwargs); end

  # Sigs for route /publishers/log_out(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def log_out_publishers_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def log_out_publishers_url(*args, **kwargs); end

  # Sigs for route /publishers/home(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def home_publishers_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def home_publishers_url(*args, **kwargs); end

  # Sigs for route /publishers/home_balances(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def home_balances_publishers_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def home_balances_publishers_url(*args, **kwargs); end

  # Sigs for route /publishers/uphold_wallet_panel(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def uphold_wallet_panel_publishers_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def uphold_wallet_panel_publishers_url(*args, **kwargs); end

  # Sigs for route /publishers/paypal_wallet_panel(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def paypal_wallet_panel_publishers_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def paypal_wallet_panel_publishers_url(*args, **kwargs); end

  # Sigs for route /publishers/change_email(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def change_email_publishers_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def change_email_publishers_url(*args, **kwargs); end

  # Sigs for route /publishers/change_email_confirm(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def change_email_confirm_publishers_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def change_email_confirm_publishers_url(*args, **kwargs); end

  # Sigs for route /publishers/update_email(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def update_email_publishers_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def update_email_publishers_url(*args, **kwargs); end

  # Sigs for route /publishers/email_verified(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def email_verified_publishers_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def email_verified_publishers_url(*args, **kwargs); end

  # Sigs for route /publishers/suspended_error(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def suspended_error_publishers_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def suspended_error_publishers_url(*args, **kwargs); end

  # Sigs for route /publishers/get_site_banner_data(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def get_site_banner_data_publishers_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def get_site_banner_data_publishers_url(*args, **kwargs); end

  # Sigs for route /publishers/verify(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def verify_publishers_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def verify_publishers_url(*args, **kwargs); end

  # Sigs for route /publishers(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publishers_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publishers_url(*args, **kwargs); end

  # Sigs for route /publishers/complete_signup(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def complete_signup_publishers_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def complete_signup_publishers_url(*args, **kwargs); end

  # Sigs for route /publishers/create_new_untethered_referral_code(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def create_new_untethered_referral_code_publishers_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def create_new_untethered_referral_code_publishers_url(*args, **kwargs); end

  # Sigs for route /publishers/choose_new_channel_type(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def choose_new_channel_type_publishers_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def choose_new_channel_type_publishers_url(*args, **kwargs); end

  # Sigs for route /publishers/security(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def security_publishers_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def security_publishers_url(*args, **kwargs); end

  # Sigs for route /publishers/prompt_security(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def prompt_security_publishers_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def prompt_security_publishers_url(*args, **kwargs); end

  # Sigs for route /publishers/settings(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def settings_publishers_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def settings_publishers_url(*args, **kwargs); end

  # Sigs for route /publishers/two_factor_authentications(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def two_factor_authentications_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def two_factor_authentications_url(*args, **kwargs); end

  # Sigs for route /publishers/u2f_registrations(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def u2f_registrations_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def u2f_registrations_url(*args, **kwargs); end

  # Sigs for route /publishers/u2f_registrations/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_u2f_registration_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_u2f_registration_url(*args, **kwargs); end

  # Sigs for route /publishers/u2f_registrations/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def u2f_registration_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def u2f_registration_url(*args, **kwargs); end

  # Sigs for route /publishers/u2f_authentications(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def u2f_authentications_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def u2f_authentications_url(*args, **kwargs); end

  # Sigs for route /publishers/totp_registrations(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def totp_registrations_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def totp_registrations_url(*args, **kwargs); end

  # Sigs for route /publishers/totp_registrations/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_totp_registration_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_totp_registration_url(*args, **kwargs); end

  # Sigs for route /publishers/totp_registrations/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def totp_registration_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def totp_registration_url(*args, **kwargs); end

  # Sigs for route /publishers/totp_authentications(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def totp_authentications_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def totp_authentications_url(*args, **kwargs); end

  # Sigs for route /publishers/:publisher_id/site_banners/set_default_site_banner_mode(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def set_default_site_banner_mode_publisher_site_banners_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def set_default_site_banner_mode_publisher_site_banners_url(*args, **kwargs); end

  # Sigs for route /publishers/:publisher_id/site_banners(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publisher_site_banners_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publisher_site_banners_url(*args, **kwargs); end

  # Sigs for route /publishers/:publisher_id/site_banners/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_publisher_site_banner_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_publisher_site_banner_url(*args, **kwargs); end

  # Sigs for route /publishers/:publisher_id/site_banners/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_publisher_site_banner_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_publisher_site_banner_url(*args, **kwargs); end

  # Sigs for route /publishers/:publisher_id/site_banners/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publisher_site_banner_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publisher_site_banner_url(*args, **kwargs); end

  # Sigs for route /publishers/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_publisher_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_publisher_url(*args, **kwargs); end

  # Sigs for route /publishers/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publisher_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publisher_url(*args, **kwargs); end

  # Sigs for route /publishers/auth/register_youtube_channel(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publisher_register_youtube_channel_omniauth_authorize_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publisher_register_youtube_channel_omniauth_authorize_url(*args, **kwargs); end

  # Sigs for route /publishers/auth/register_youtube_channel/callback(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publisher_register_youtube_channel_omniauth_callback_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publisher_register_youtube_channel_omniauth_callback_url(*args, **kwargs); end

  # Sigs for route /publishers/auth/youtube_login(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publisher_youtube_login_omniauth_authorize_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publisher_youtube_login_omniauth_authorize_url(*args, **kwargs); end

  # Sigs for route /publishers/auth/youtube_login/callback(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publisher_youtube_login_omniauth_callback_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publisher_youtube_login_omniauth_callback_url(*args, **kwargs); end

  # Sigs for route /publishers/auth/register_twitch_channel(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publisher_register_twitch_channel_omniauth_authorize_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publisher_register_twitch_channel_omniauth_authorize_url(*args, **kwargs); end

  # Sigs for route /publishers/auth/register_twitch_channel/callback(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publisher_register_twitch_channel_omniauth_callback_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publisher_register_twitch_channel_omniauth_callback_url(*args, **kwargs); end

  # Sigs for route /publishers/auth/register_twitter_channel(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publisher_register_twitter_channel_omniauth_authorize_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publisher_register_twitter_channel_omniauth_authorize_url(*args, **kwargs); end

  # Sigs for route /publishers/auth/register_twitter_channel/callback(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publisher_register_twitter_channel_omniauth_callback_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publisher_register_twitter_channel_omniauth_callback_url(*args, **kwargs); end

  # Sigs for route /publishers/auth/register_vimeo_channel(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publisher_register_vimeo_channel_omniauth_authorize_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publisher_register_vimeo_channel_omniauth_authorize_url(*args, **kwargs); end

  # Sigs for route /publishers/auth/register_vimeo_channel/callback(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publisher_register_vimeo_channel_omniauth_callback_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publisher_register_vimeo_channel_omniauth_callback_url(*args, **kwargs); end

  # Sigs for route /publishers/auth/register_reddit_channel(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publisher_register_reddit_channel_omniauth_authorize_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publisher_register_reddit_channel_omniauth_authorize_url(*args, **kwargs); end

  # Sigs for route /publishers/auth/register_reddit_channel/callback(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publisher_register_reddit_channel_omniauth_callback_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publisher_register_reddit_channel_omniauth_callback_url(*args, **kwargs); end

  # Sigs for route /publishers/auth/register_github_channel(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publisher_register_github_channel_omniauth_authorize_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publisher_register_github_channel_omniauth_authorize_url(*args, **kwargs); end

  # Sigs for route /publishers/auth/register_github_channel/callback(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publisher_register_github_channel_omniauth_callback_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def publisher_register_github_channel_omniauth_callback_url(*args, **kwargs); end

  # Sigs for route /channels/:id/verification_status(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def verification_status_channel_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def verification_status_channel_url(*args, **kwargs); end

  # Sigs for route /channels/:id/cancel_add(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def cancel_add_channel_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def cancel_add_channel_url(*args, **kwargs); end

  # Sigs for route /channels/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def channel_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def channel_url(*args, **kwargs); end

  # Sigs for route /channels/:id/tokens/:token_id/reject_transfer(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def token_reject_transfer_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def token_reject_transfer_url(*args, **kwargs); end

  # Sigs for route /site_channels/:id/update_unverified(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def update_unverified_site_channel_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def update_unverified_site_channel_url(*args, **kwargs); end

  # Sigs for route /site_channels/:id/check_for_https(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def check_for_https_site_channel_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def check_for_https_site_channel_url(*args, **kwargs); end

  # Sigs for route /site_channels/:id/verify(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def verify_site_channel_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def verify_site_channel_url(*args, **kwargs); end

  # Sigs for route /site_channels/:id/download_verification_file(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def download_verification_file_site_channel_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def download_verification_file_site_channel_url(*args, **kwargs); end

  # Sigs for route /site_channels/:id/verification_choose_method(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def verification_choose_method_site_channel_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def verification_choose_method_site_channel_url(*args, **kwargs); end

  # Sigs for route /site_channels/:id/verification_dns_record(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def verification_dns_record_site_channel_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def verification_dns_record_site_channel_url(*args, **kwargs); end

  # Sigs for route /site_channels/:id/verification_public_file(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def verification_public_file_site_channel_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def verification_public_file_site_channel_url(*args, **kwargs); end

  # Sigs for route /site_channels/:id/verification_github(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def verification_github_site_channel_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def verification_github_site_channel_url(*args, **kwargs); end

  # Sigs for route /site_channels/:id/verification_wordpress(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def verification_wordpress_site_channel_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def verification_wordpress_site_channel_url(*args, **kwargs); end

  # Sigs for route /site_channels(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def site_channels_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def site_channels_url(*args, **kwargs); end

  # Sigs for route /site_channels/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_site_channel_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_site_channel_url(*args, **kwargs); end

  # Sigs for route /site_channels/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def site_channel_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def site_channel_url(*args, **kwargs); end

  # Sigs for route /static(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def static_index_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def static_index_url(*args, **kwargs); end

  # Sigs for route /faqs(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def faqs_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def faqs_url(*args, **kwargs); end

  # Sigs for route /
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def root_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def root_url(*args, **kwargs); end

  # Sigs for route /no_js(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def no_js_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def no_js_url(*args, **kwargs); end

  # Sigs for route /sign-up(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def sign_up_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def sign_up_url(*args, **kwargs); end

  # Sigs for route /log-in(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def log_in_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def log_in_url(*args, **kwargs); end

  # Sigs for route /api/v1/publishers/:publisher_id/publisher_status_updates(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_publisher_publisher_status_updates_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_publisher_publisher_status_updates_url(*args, **kwargs); end

  # Sigs for route /api/v1/publishers(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_publishers_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_publishers_url(*args, **kwargs); end

  # Sigs for route /api/v1/publishers/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_api_v1_publisher_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_api_v1_publisher_url(*args, **kwargs); end

  # Sigs for route /api/v1/publishers/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_api_v1_publisher_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_api_v1_publisher_url(*args, **kwargs); end

  # Sigs for route /api/v1/publishers/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_publisher_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_publisher_url(*args, **kwargs); end

  # Sigs for route /api/v1/promo_registrations/:referral_code/publisher_status_updates(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_promo_registrations_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_promo_registrations_url(*args, **kwargs); end

  # Sigs for route /api/v1/transactions/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_transaction_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_transaction_url(*args, **kwargs); end

  # Sigs for route /api/v1/stats/channels/twitch_channels_by_view_count(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_stats_channels_twitch_channels_by_view_count_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_stats_channels_twitch_channels_by_view_count_url(*args, **kwargs); end

  # Sigs for route /api/v1/stats/channels/youtube_channels_by_view_count(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_stats_channels_youtube_channels_by_view_count_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_stats_channels_youtube_channels_by_view_count_url(*args, **kwargs); end

  # Sigs for route /api/v1/stats/channels/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_stats_channel_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_stats_channel_url(*args, **kwargs); end

  # Sigs for route /api/v1/stats/promo_campaigns(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_stats_promo_campaigns_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_stats_promo_campaigns_url(*args, **kwargs); end

  # Sigs for route /api/v1/stats/promo_campaigns/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_stats_promo_campaign_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_stats_promo_campaign_url(*args, **kwargs); end

  # Sigs for route /api/v1/stats/referral_codes(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_stats_referral_codes_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_stats_referral_codes_url(*args, **kwargs); end

  # Sigs for route /api/v1/stats/referral_codes/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_stats_referral_code_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_stats_referral_code_url(*args, **kwargs); end

  # Sigs for route /api/v1/stats/publishers/signups_per_day(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_stats_publishers_signups_per_day_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_stats_publishers_signups_per_day_url(*args, **kwargs); end

  # Sigs for route /api/v1/stats/publishers/email_verified_signups_per_day(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_stats_publishers_email_verified_signups_per_day_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_stats_publishers_email_verified_signups_per_day_url(*args, **kwargs); end

  # Sigs for route /api/v1/stats/publishers/channel_and_email_verified_signups_per_day(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_stats_publishers_channel_and_email_verified_signups_per_day_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_stats_publishers_channel_and_email_verified_signups_per_day_url(*args, **kwargs); end

  # Sigs for route /api/v1/stats/publishers/channel_uphold_and_email_verified_signups_per_day(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_stats_publishers_channel_uphold_and_email_verified_signups_per_day_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_stats_publishers_channel_uphold_and_email_verified_signups_per_day_url(*args, **kwargs); end

  # Sigs for route /api/v1/stats/publishers/channel_and_kyc_uphold_and_email_verified_signups_per_day(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_stats_publishers_channel_and_kyc_uphold_and_email_verified_signups_per_day_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_stats_publishers_channel_and_kyc_uphold_and_email_verified_signups_per_day_url(*args, **kwargs); end

  # Sigs for route /api/v1/stats/publishers/javascript_enabled_usage(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_stats_publishers_javascript_enabled_usage_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_stats_publishers_javascript_enabled_usage_url(*args, **kwargs); end

  # Sigs for route /api/v1/stats/publishers/totals(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_stats_publishers_totals_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_stats_publishers_totals_url(*args, **kwargs); end

  # Sigs for route /api/v1/public/channels(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_public_channels_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_public_channels_url(*args, **kwargs); end

  # Sigs for route /api/v1/public/channels/totals(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_public_channels_totals_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v1_public_channels_totals_url(*args, **kwargs); end

  # Sigs for route /api/v2/public/channels(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v2_public_channels_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v2_public_channels_url(*args, **kwargs); end

  # Sigs for route /api/v2/public/channels/totals(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v2_public_channels_totals_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v2_public_channels_totals_url(*args, **kwargs); end

  # Sigs for route /api/v3/public/channels(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v3_public_channels_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v3_public_channels_url(*args, **kwargs); end

  # Sigs for route /api/v3/public/channels/totals(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v3_public_channels_totals_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v3_public_channels_totals_url(*args, **kwargs); end

  # Sigs for route /api/v3_p1/public/channels(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v3_p1_public_channels_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def api_v3_p1_public_channels_url(*args, **kwargs); end

  # Sigs for route /admin/channels/duplicates(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def duplicates_admin_channels_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def duplicates_admin_channels_url(*args, **kwargs); end

  # Sigs for route /admin/channels(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_channels_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_channels_url(*args, **kwargs); end

  # Sigs for route /admin/channels/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_channel_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_channel_url(*args, **kwargs); end

  # Sigs for route /admin/cases/:case_id/assign(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_case_assign_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_case_assign_url(*args, **kwargs); end

  # Sigs for route /admin/cases/overview(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def overview_admin_cases_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def overview_admin_cases_url(*args, **kwargs); end

  # Sigs for route /admin/cases/case_replies(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_case_replies_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_case_replies_url(*args, **kwargs); end

  # Sigs for route /admin/cases/case_replies/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_case_reply_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_case_reply_url(*args, **kwargs); end

  # Sigs for route /admin/cases/case_replies/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_case_reply_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_case_reply_url(*args, **kwargs); end

  # Sigs for route /admin/cases/case_replies/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_case_reply_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_case_reply_url(*args, **kwargs); end

  # Sigs for route /admin/cases(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_cases_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_cases_url(*args, **kwargs); end

  # Sigs for route /admin/cases/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_case_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_case_url(*args, **kwargs); end

  # Sigs for route /admin/cases/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_case_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_case_url(*args, **kwargs); end

  # Sigs for route /admin/cases/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_case_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_case_url(*args, **kwargs); end

  # Sigs for route /admin/case_notes(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_case_notes_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_case_notes_url(*args, **kwargs); end

  # Sigs for route /admin/case_notes/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_case_note_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_case_note_url(*args, **kwargs); end

  # Sigs for route /admin/case_notes/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_case_note_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_case_note_url(*args, **kwargs); end

  # Sigs for route /admin/case_notes/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_case_note_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_case_note_url(*args, **kwargs); end

  # Sigs for route /admin/faq_categories(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_faq_categories_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_faq_categories_url(*args, **kwargs); end

  # Sigs for route /admin/faq_categories/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_faq_category_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_faq_category_url(*args, **kwargs); end

  # Sigs for route /admin/faq_categories/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_faq_category_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_faq_category_url(*args, **kwargs); end

  # Sigs for route /admin/faq_categories/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_faq_category_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_faq_category_url(*args, **kwargs); end

  # Sigs for route /admin/faqs(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_faqs_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_faqs_url(*args, **kwargs); end

  # Sigs for route /admin/faqs/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_faq_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_faq_url(*args, **kwargs); end

  # Sigs for route /admin/faqs/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_faq_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_faq_url(*args, **kwargs); end

  # Sigs for route /admin/faqs/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_faq_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_faq_url(*args, **kwargs); end

  # Sigs for route /admin/payout_reports/notify(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def notify_admin_payout_reports_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def notify_admin_payout_reports_url(*args, **kwargs); end

  # Sigs for route /admin/payout_reports/upload_settlement_report(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def upload_settlement_report_admin_payout_reports_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def upload_settlement_report_admin_payout_reports_url(*args, **kwargs); end

  # Sigs for route /admin/payout_reports/payouts_in_progress(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def payouts_in_progress_admin_payout_reports_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def payouts_in_progress_admin_payout_reports_url(*args, **kwargs); end

  # Sigs for route /admin/payout_reports/:id/download(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def download_admin_payout_report_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def download_admin_payout_report_url(*args, **kwargs); end

  # Sigs for route /admin/payout_reports/:id/refresh(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def refresh_admin_payout_report_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def refresh_admin_payout_report_url(*args, **kwargs); end

  # Sigs for route /admin/payout_reports(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_payout_reports_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_payout_reports_url(*args, **kwargs); end

  # Sigs for route /admin/payout_reports/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_payout_report_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_payout_report_url(*args, **kwargs); end

  # Sigs for route /admin/payout_reports/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_payout_report_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_payout_report_url(*args, **kwargs); end

  # Sigs for route /admin/payout_reports/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_payout_report_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_payout_report_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/wallet_info(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_wallet_info_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_wallet_info_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/invoices/:invoice_id/upload(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_invoice_upload_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_invoice_upload_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/invoices/:invoice_id/finalize(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_invoice_finalize_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_invoice_finalize_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/invoices/:invoice_id/update_status(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_invoice_update_status_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_invoice_update_status_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/invoices/:invoice_id/archive_file(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_invoice_archive_file_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_invoice_archive_file_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/invoices(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_invoices_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_invoices_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/invoices/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_publisher_invoice_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_publisher_invoice_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/invoices/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_publisher_invoice_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_publisher_invoice_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/invoices/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_invoice_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_invoice_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/approve_channel(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def approve_channel_admin_publishers_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def approve_channel_admin_publishers_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/statement(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def statement_admin_publishers_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def statement_admin_publishers_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/cancel_two_factor_authentication_removal(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def cancel_two_factor_authentication_removal_admin_publishers_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def cancel_two_factor_authentication_removal_admin_publishers_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/sign_in_as_user(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_sign_in_as_user_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_sign_in_as_user_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/payments(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_payments_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_payments_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/payments/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_publisher_payment_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_publisher_payment_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/payments/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_publisher_payment_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_publisher_payment_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/payments/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_payment_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_payment_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/refresh_uphold(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_refresh_uphold_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_refresh_uphold_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/publisher_notes(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_publisher_notes_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_publisher_notes_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/publisher_notes/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_publisher_publisher_note_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_publisher_publisher_note_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/publisher_notes/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_publisher_publisher_note_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_publisher_publisher_note_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/publisher_notes/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_publisher_note_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_publisher_note_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/publisher_whitelist_updates(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_publisher_whitelist_updates_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_publisher_whitelist_updates_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/publisher_whitelist_updates/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_publisher_publisher_whitelist_update_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_publisher_publisher_whitelist_update_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/publisher_whitelist_updates/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_publisher_publisher_whitelist_update_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_publisher_publisher_whitelist_update_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/publisher_whitelist_updates/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_publisher_whitelist_update_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_publisher_whitelist_update_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/publisher_status_updates(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_publisher_status_updates_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_publisher_status_updates_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/publisher_status_updates/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_publisher_publisher_status_update_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_publisher_publisher_status_update_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/publisher_status_updates/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_publisher_publisher_status_update_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_publisher_publisher_status_update_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/publisher_status_updates/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_publisher_status_update_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_publisher_status_update_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/referrals(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_referrals_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_referrals_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/referrals/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_publisher_referral_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_publisher_referral_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/referrals/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_publisher_referral_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_publisher_referral_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/referrals/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_referral_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_referral_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/reports(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_reports_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_reports_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/reports/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_publisher_report_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_publisher_report_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/reports/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_publisher_report_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_publisher_report_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:publisher_id/reports/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_report_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_report_url(*args, **kwargs); end

  # Sigs for route /admin/publishers(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publishers_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publishers_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_publisher_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_publisher_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_publisher_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_publisher_url(*args, **kwargs); end

  # Sigs for route /admin/publishers/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_publisher_url(*args, **kwargs); end

  # Sigs for route /admin/channel_transfers(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_channel_transfers_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_channel_transfers_url(*args, **kwargs); end

  # Sigs for route /admin/channel_transfers/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_channel_transfer_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_channel_transfer_url(*args, **kwargs); end

  # Sigs for route /admin/channel_transfers/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_channel_transfer_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_channel_transfer_url(*args, **kwargs); end

  # Sigs for route /admin/channel_transfers/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_channel_transfer_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_channel_transfer_url(*args, **kwargs); end

  # Sigs for route /admin/channel_approvals(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_channel_approvals_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_channel_approvals_url(*args, **kwargs); end

  # Sigs for route /admin/channel_approvals/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_channel_approval_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_channel_approval_url(*args, **kwargs); end

  # Sigs for route /admin/channel_approvals/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_channel_approval_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_channel_approval_url(*args, **kwargs); end

  # Sigs for route /admin/channel_approvals/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_channel_approval_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_channel_approval_url(*args, **kwargs); end

  # Sigs for route /admin/security(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_security_index_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_security_index_url(*args, **kwargs); end

  # Sigs for route /admin/security/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_security_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_security_url(*args, **kwargs); end

  # Sigs for route /admin/security/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_security_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_security_url(*args, **kwargs); end

  # Sigs for route /admin/security/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_security_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_security_url(*args, **kwargs); end

  # Sigs for route /admin/organizations(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_organizations_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_organizations_url(*args, **kwargs); end

  # Sigs for route /admin/organizations/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_organization_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_admin_organization_url(*args, **kwargs); end

  # Sigs for route /admin/organizations/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_organization_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_admin_organization_url(*args, **kwargs); end

  # Sigs for route /admin/organizations/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_organization_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_organization_url(*args, **kwargs); end

  # Sigs for route /admin/stats/contributions(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_stats_contributions_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_stats_contributions_url(*args, **kwargs); end

  # Sigs for route /admin/stats/referrals(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_stats_referrals_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_stats_referrals_url(*args, **kwargs); end

  # Sigs for route /admin/stats/top_balances(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_stats_top_balances_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_stats_top_balances_url(*args, **kwargs); end

  # Sigs for route /admin/stats/top_youtube_channels(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_stats_top_youtube_channels_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_stats_top_youtube_channels_url(*args, **kwargs); end

  # Sigs for route /admin/stats/publisher_statistics(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_stats_publisher_statistics_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_stats_publisher_statistics_url(*args, **kwargs); end

  # Sigs for route /admin/unattached_promo_registrations/report(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def report_admin_unattached_promo_registrations_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def report_admin_unattached_promo_registrations_url(*args, **kwargs); end

  # Sigs for route /admin/unattached_promo_registrations/update_statuses(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def update_statuses_admin_unattached_promo_registrations_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def update_statuses_admin_unattached_promo_registrations_url(*args, **kwargs); end

  # Sigs for route /admin/unattached_promo_registrations/assign_campaign(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def assign_campaign_admin_unattached_promo_registrations_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def assign_campaign_admin_unattached_promo_registrations_url(*args, **kwargs); end

  # Sigs for route /admin/unattached_promo_registrations/assign_installer_type(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def assign_installer_type_admin_unattached_promo_registrations_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def assign_installer_type_admin_unattached_promo_registrations_url(*args, **kwargs); end

  # Sigs for route /admin/unattached_promo_registrations(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_unattached_promo_registrations_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_unattached_promo_registrations_url(*args, **kwargs); end

  # Sigs for route /admin/promo_campaigns(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_promo_campaigns_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_promo_campaigns_url(*args, **kwargs); end

  # Sigs for route /admin(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_root_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_root_url(*args, **kwargs); end

  # Sigs for route /admin/uphold_status_reports(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_uphold_status_reports_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_uphold_status_reports_url(*args, **kwargs); end

  # Sigs for route /admin/uphold_status_reports/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_uphold_status_report_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_uphold_status_report_url(*args, **kwargs); end

  # Sigs for route /magic
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def sidekiq_web_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def sidekiq_web_url(*args, **kwargs); end

  # Sigs for route /mailer-queue-status(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def mailer_queue_status_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def mailer_queue_status_url(*args, **kwargs); end

  # Sigs for route /default-queue-status(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def default_queue_status_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def default_queue_status_url(*args, **kwargs); end

  # Sigs for route /scheduler-queue-status(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def scheduler_queue_status_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def scheduler_queue_status_url(*args, **kwargs); end

  # Sigs for route /transactional-queue-status(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def transactional_queue_status_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def transactional_queue_status_url(*args, **kwargs); end

  # Sigs for route /rails/action_mailbox/postmark/inbound_emails(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_postmark_inbound_emails_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_postmark_inbound_emails_url(*args, **kwargs); end

  # Sigs for route /rails/action_mailbox/relay/inbound_emails(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_relay_inbound_emails_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_relay_inbound_emails_url(*args, **kwargs); end

  # Sigs for route /rails/action_mailbox/sendgrid/inbound_emails(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_sendgrid_inbound_emails_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_sendgrid_inbound_emails_url(*args, **kwargs); end

  # Sigs for route /rails/action_mailbox/mandrill/inbound_emails(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_mandrill_inbound_health_check_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_mandrill_inbound_health_check_url(*args, **kwargs); end

  # Sigs for route /rails/action_mailbox/mandrill/inbound_emails(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_mandrill_inbound_emails_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_mandrill_inbound_emails_url(*args, **kwargs); end

  # Sigs for route /rails/action_mailbox/mailgun/inbound_emails/mime(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_mailgun_inbound_emails_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_mailgun_inbound_emails_url(*args, **kwargs); end

  # Sigs for route /rails/conductor/action_mailbox/inbound_emails(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_conductor_inbound_emails_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_conductor_inbound_emails_url(*args, **kwargs); end

  # Sigs for route /rails/conductor/action_mailbox/inbound_emails/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_rails_conductor_inbound_email_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_rails_conductor_inbound_email_url(*args, **kwargs); end

  # Sigs for route /rails/conductor/action_mailbox/inbound_emails/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_rails_conductor_inbound_email_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_rails_conductor_inbound_email_url(*args, **kwargs); end

  # Sigs for route /rails/conductor/action_mailbox/inbound_emails/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_conductor_inbound_email_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_conductor_inbound_email_url(*args, **kwargs); end

  # Sigs for route /rails/conductor/action_mailbox/inbound_emails/sources/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_rails_conductor_inbound_email_source_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_rails_conductor_inbound_email_source_url(*args, **kwargs); end

  # Sigs for route /rails/conductor/action_mailbox/inbound_emails/sources(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_conductor_inbound_email_sources_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_conductor_inbound_email_sources_url(*args, **kwargs); end

  # Sigs for route /rails/conductor/action_mailbox/:inbound_email_id/reroute(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_conductor_inbound_email_reroute_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_conductor_inbound_email_reroute_url(*args, **kwargs); end

  # Sigs for route /rails/active_storage/blobs/redirect/:signed_id/*filename(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_service_blob_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_service_blob_url(*args, **kwargs); end

  # Sigs for route /rails/active_storage/blobs/proxy/:signed_id/*filename(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_service_blob_proxy_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_service_blob_proxy_url(*args, **kwargs); end

  # Sigs for route /rails/active_storage/representations/redirect/:signed_blob_id/:variation_key/*filename(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_blob_representation_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_blob_representation_url(*args, **kwargs); end

  # Sigs for route /rails/active_storage/representations/proxy/:signed_blob_id/:variation_key/*filename(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_blob_representation_proxy_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_blob_representation_proxy_url(*args, **kwargs); end

  # Sigs for route /rails/active_storage/disk/:encoded_key/*filename(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_disk_service_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_disk_service_url(*args, **kwargs); end

  # Sigs for route /rails/active_storage/disk/:encoded_token(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def update_rails_disk_service_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def update_rails_disk_service_url(*args, **kwargs); end

  # Sigs for route /rails/active_storage/direct_uploads(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_direct_uploads_path(*args, **kwargs); end

  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def rails_direct_uploads_url(*args, **kwargs); end
end
