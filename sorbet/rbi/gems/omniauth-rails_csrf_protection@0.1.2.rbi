# typed: ignore

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `omniauth-rails_csrf_protection` gem.
# Please instead update this file by running `bin/tapioca gem omniauth-rails_csrf_protection`.

module OmniAuth
  class << self
    def config; end
    def configure; end
    def logger; end
    def mock_auth_for(provider); end
    def strategies; end
  end
end

module OmniAuth::RailsCsrfProtection; end
class OmniAuth::RailsCsrfProtection::Railtie < ::Rails::Railtie; end

class OmniAuth::RailsCsrfProtection::TokenVerifier
  include ::ActiveSupport::Configurable
  include ::AbstractController::Helpers
  include ::ActiveSupport::Callbacks
  include ::AbstractController::Callbacks
  include ::ActionController::RequestForgeryProtection
  extend ::ActiveSupport::Configurable::ClassMethods
  extend ::AbstractController::Helpers::ClassMethods
  extend ::ActiveSupport::Callbacks::ClassMethods
  extend ::ActiveSupport::DescendantsTracker
  extend ::AbstractController::Callbacks::ClassMethods
  extend ::ActionController::RequestForgeryProtection::ClassMethods

  def __callbacks; end
  def __callbacks?; end
  def _helper_methods; end
  def _helper_methods=(_arg0); end
  def _helper_methods?; end
  def _process_action_callbacks; end
  def _run_process_action_callbacks(&block); end
  def allow_forgery_protection; end
  def allow_forgery_protection=(value); end
  def call(env); end
  def default_protect_from_forgery; end
  def default_protect_from_forgery=(value); end
  def forgery_protection_origin_check; end
  def forgery_protection_origin_check=(value); end
  def forgery_protection_strategy; end
  def forgery_protection_strategy=(value); end
  def log_warning_on_csrf_failure; end
  def log_warning_on_csrf_failure=(value); end
  def params(*_arg0, &_arg1); end
  def per_form_csrf_tokens; end
  def per_form_csrf_tokens=(value); end
  def request_forgery_protection_token; end
  def request_forgery_protection_token=(value); end
  def session(*_arg0, &_arg1); end
  def urlsafe_csrf_tokens; end

  private

  def request; end

  class << self
    def __callbacks; end
    def __callbacks=(value); end
    def __callbacks?; end
    def _helper_methods; end
    def _helper_methods=(value); end
    def _helper_methods?; end
    def _helpers; end
    def _process_action_callbacks; end
    def _process_action_callbacks=(value); end
    def allow_forgery_protection; end
    def allow_forgery_protection=(value); end
    def default_protect_from_forgery; end
    def default_protect_from_forgery=(value); end
    def forgery_protection_origin_check; end
    def forgery_protection_origin_check=(value); end
    def forgery_protection_strategy; end
    def forgery_protection_strategy=(value); end
    def log_warning_on_csrf_failure; end
    def log_warning_on_csrf_failure=(value); end
    def per_form_csrf_tokens; end
    def per_form_csrf_tokens=(value); end
    def request_forgery_protection_token; end
    def request_forgery_protection_token=(value); end
    def urlsafe_csrf_tokens; end
    def urlsafe_csrf_tokens=(value); end
  end
end

module OmniAuth::RailsCsrfProtection::TokenVerifier::HelperMethods
  def form_authenticity_token(*args, &block); end
  def protect_against_forgery?(*args, &block); end
end

OmniAuth::RailsCsrfProtection::VERSION = T.let(T.unsafe(nil), String)
OmniAuth::VERSION = T.let(T.unsafe(nil), String)
