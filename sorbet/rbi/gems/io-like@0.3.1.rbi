# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `io-like` gem.
# Please instead update this file by running `bin/tapioca gem io-like`.

class IO
  include ::Enumerable
  include ::File::Constants
end

class IO::ConsoleMode
  def echo=(_arg0); end
  def raw(*_arg0); end
  def raw!(*_arg0); end

  private

  def initialize_copy(_arg0); end
end

class IO::EAGAINWaitReadable < ::Errno::EAGAIN
  include ::IO::WaitReadable
end

class IO::EAGAINWaitWritable < ::Errno::EAGAIN
  include ::IO::WaitWritable
end

class IO::EINPROGRESSWaitReadable < ::Errno::EINPROGRESS
  include ::IO::WaitReadable
end

class IO::EINPROGRESSWaitWritable < ::Errno::EINPROGRESS
  include ::IO::WaitWritable
end

IO::EWOULDBLOCKWaitReadable = IO::EAGAINWaitReadable
IO::EWOULDBLOCKWaitWritable = IO::EAGAINWaitWritable

module IO::Like
  include ::Enumerable

  def <<(obj); end
  def binmode; end
  def close; end
  def close_read; end
  def close_write; end
  def closed?; end
  def duplexed?; end
  def each(sep_string = T.unsafe(nil)); end
  def each_byte; end
  def each_line(sep_string = T.unsafe(nil)); end
  def eof; end
  def eof?; end
  def fcntl(*args); end
  def fileno; end
  def fill_size; end
  def fill_size=(fill_size); end
  def flush; end
  def flush_size; end
  def flush_size=(flush_size); end
  def getc; end
  def gets(sep_string = T.unsafe(nil)); end
  def isatty; end
  def lineno; end
  def lineno=(integer); end
  def path; end
  def pos; end
  def pos=(position); end
  def print(*args); end
  def printf(*args); end
  def putc(obj); end
  def puts(*args); end
  def read(length = T.unsafe(nil), buffer = T.unsafe(nil)); end
  def read_ready?; end
  def readable?; end
  def readbytes(length); end
  def readchar; end
  def readline(sep_string = T.unsafe(nil)); end
  def readlines(sep_string = T.unsafe(nil)); end
  def readpartial(length, buffer = T.unsafe(nil)); end
  def rewind; end
  def seek(offset, whence = T.unsafe(nil)); end
  def seekable?; end
  def sync; end
  def sync=(sync); end
  def sysread(length, buffer = T.unsafe(nil)); end
  def sysseek(offset, whence = T.unsafe(nil)); end
  def syswrite(string); end
  def tell; end
  def to_io; end
  def tty?; end
  def ungetc(integer); end
  def unread(string); end
  def writable?; end
  def write(string); end
  def write_ready?; end

  private

  def __io_like__array_join(array, separator, seen = T.unsafe(nil)); end
  def __io_like__buffered_flush; end
  def __io_like__buffered_read(length); end
  def __io_like__buffered_seek(offset, whence = T.unsafe(nil)); end
  def __io_like__buffered_write(string); end
  def __io_like__close_read; end
  def __io_like__close_write; end
  def __io_like__closed_read?; end
  def __io_like__closed_write?; end
  def __io_like__internal_read_buffer; end
  def __io_like__internal_write_buffer; end
end

IO::PRIORITY = T.let(T.unsafe(nil), Integer)
IO::READABLE = T.let(T.unsafe(nil), Integer)
IO::WRITABLE = T.let(T.unsafe(nil), Integer)
